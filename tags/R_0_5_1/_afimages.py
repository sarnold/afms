# -*- coding: latin-1  -*-

# -------------------------------------------------------------------
# Copyright 2008 Achim Köhler
#
# This file is part of AFMS.
#
# AFMS is free software: you can redistribute it and/or modify
# it under the terms of the GNU General Public License as published
# by the Free Software Foundation, either version 2 of the License,
# or (at your option) any later version.
#
# AFMS is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY; without even the implied warranty of
# MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
# GNU General Public License for more details.
#
# You should have received a copy of the GNU General Public License
# along with AFMS.  If not, see <http://www.gnu.org/licenses/>.
# -------------------------------------------------------------------
# Portions of this file has been taken from wxPython, see
# http://www.wxpython.org/onlinedocs.php
# Here is the copyright notice from wxPython:
#
# Copyright (c) 1992-2006 Julian Smart, Robert Roebling,
# Vadim Zeitlin and other members of the wxWidgets team
# Portions (c) 1996 Artificial Intelligence Applications Institute
# Please also see the wxWindows license files (preamble.txt,
# lgpl.txt, gpl.txt, licence.txt, licendoc.txt) for conditions of
# software and documentation use. Note that we use the old name
# wxWindows in the license, pending recognition of the new name by
# OSI.
# -------------------------------------------------------------------

# $Id$

from wx import ImageFromStream, BitmapFromImage, EmptyIcon
import cStringIO

#----------------------------------------------------------------------
def getSmallUpArrowData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00<IDAT8\x8dcddbf\xa0\x040Q\xa4{h\x18\xf0\xff\xdf\xdf\xffd\x1b\x00\xd3\
\x8c\xcf\x10\x9c\x06\xa0k\xc2e\x08m\xc2\x00\x97m\xd8\xc41\x0c \x14h\xe8\xf2\
\x8c\xa3)q\x10\x18\x00\x00R\xd8#\xec\xb2\xcd\xc1Y\x00\x00\x00\x00IEND\xaeB`\
\x82'

def getSmallUpArrowBitmap():
    return BitmapFromImage(getSmallUpArrowImage())

def getSmallUpArrowImage():
    stream = cStringIO.StringIO(getSmallUpArrowData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getSmallDnArrowData():
    return \
"\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00HIDAT8\x8dcddbf\xa0\x040Q\xa4{\xd4\x00\x06\x06\x06\x06\x06\x16t\x81\
\xff\xff\xfe\xfe'\xa4\x89\x91\x89\x99\x11\xa7\x0b\x90%\ti\xc6j\x00>C\xb0\x89\
\xd3.\x10\xd1m\xc3\xe5*\xbc.\x80i\xc2\x17.\x8c\xa3y\x81\x01\x00\xa1\x0e\x04e\
?\x84B\xef\x00\x00\x00\x00IEND\xaeB`\x82"

def getSmallDnArrowBitmap():
    return BitmapFromImage(getSmallDnArrowImage())

def getSmallDnArrowImage():
    stream = cStringIO.StringIO(getSmallDnArrowData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getEmptyData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x00\x1dIDAT8\x8dc\xfc\xff\xff\xff\x7f\x06\n\x00\x13%\x9aG\r\x185`\xd4\
\x80\xc1d\x00\x00k\xca\x04\x1c\xa7\xe1uS\x00\x00\x00\x00IEND\xaeB`\x82'

def getEmptyBitmap():
    return BitmapFromImage(getEmptyImage())

def getEmptyImage():
    stream = cStringIO.StringIO(getEmptyData())
    return ImageFromStream(stream)


#----------------------------------------------------------------------
def getTCNewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x02\
\x00\x00\x00o\x15\xaa\xaf\x00\x00\x00\x03sBIT\x08\x08\x08\xdb\xe1O\xe0\x00\
\x00\x03\xfaIDAT8\x8d\xad\x94mL[U\x18\xc7\xff\xf7^\xfav\xab\xa1\xddJx\xd7\
\xa1\x0e\xd9\xc0h\xe6\x1b\xd4e[\xbb\x16\xb3-LI\xb0\tK\xdc\xd4\x98\x88\xce)\
\x9f\\\x08\x89\x89\xd1\x89F\x99~Y\xb29#\xce\xa9sK\x16\x92\xf1A\x87Y\x11\x84:\
b\x02\x0c\x02L\xe6\xdc\x98PKy)\xdd\xa0\xb6\xbd\xf7\x9c\xc7\x0f\xb7-\x85aL\
\xd4\x7fNr\x9e\xe4\xe4\xfc\xf2<\xff\xe79G "\xfc\x1f\xca\xd0\xb6\x17\xdf\xfe2\
$X2\xcd\x06\x95\xff-\x97\x92\x1b\t\xd0I\xe2\xd5\xab\xe3\xef>\xbfe\xf3\xa6\
\xf5\xc9c""\xda\xd1x:F\xff \x9e\\\x8c\x88\x88\xce]\x9a\xaei\xf8<u*j8\xd9h\
\x9c\x9a\x98\x10n\x93,\xcb\xaa\xaa\x02\xe8\xec\xect:\x1c\xb2\xc9\xb4\xbbj\
\xf7\x85\x0b\x1d\xa5\xa5\xa5f\xbd\xc4\x051\x95o"\xe2\x9c\xfb.^,..\x1e\x18\
\x18\xf0z\xbd\x0e\x87\x83\x88\x82\xc1\xa0\xd3\xe9\x9422\x8e}r\xfc\x8d\x83\
\x07\xdf\xff\xf0pp6\xbcm\xbb\xab\xd2\xe5\xf4x<q\x95\x8b\x10\xd2*\'"\xa2\xea\
\xb7Z\x95d\x92MMM\x8d\x8d\x8dZ\xcc8\r\r\x8f\xdc\xbdn]`z.\xaaPD\xa1\xb9\x85\
\x18\x80\xa1\xe1\xe1\xf3\xc335\x8d\'W\x96\x96.\x9f\xcfg\xb7\xdb5w\t8\xdc\xdc\
|\xe0\xb5\xd7-\x16+\x07\x88\xa0\xd7\xe9oFi\xc3\xc6\x8d\x8bqp\xbetk\x15PoooEE\
\x05\x118\x81\x13\xda\xdb\xcf\xef\xdcU\xa5Q\x88\xc0\x18\xa2\n\xfed\xf0/@Unk\
\x7fJccc6\x9b\xcdb\xb5rJ\xdc\x9c\n\x04\xf2\x0b\n5nLE\x9cA%\xe88\x88\x90n\xd1\
\xca\x8c|>_\x85\xdd\xce\x93\xe9pBa\xe1]\xbf\\\xbe\xcc9\xa2*b\x0c\\\x02\x078\
\x07\xf1e\x17\x97\x81\x16\x17\x17[ZZ\\.7Q\xc2 \x02^\xda\xff\xea\xbeg\xf7\xfc\
\xf0cO$\xaa\x84\x17B\xe7\xce|s\xfc\xc8G\x8c@\x84\xd4\x90.+-\x10\x08\x14\xe6\
\xe6\x02\xe8\xea\xea\xb2X\xd78\x9c.\x02\x88P\xf7J\xbdB\xc2\x81\xba}\xfe\x89\
\x89\xdc\xec\xec\xea\xfb\xcc/\xd4\xbf\x03#\xe2\x06\x93(\x19W\x01\xe5\xe4\xe4\
\x10\x91\xc2\x13\xd6p\x80\x13\x14\x86\xb8$\xd4>\xfd\x94[\x8e[\xdd\x9e\xe8\
\xf0PA\xaca6z)\x1c\xae\xce\xeb>\xe1\xbe1\x08<\xb3\x8a\xd9\x89r\x08\x9c\xa0\
\x10\x14\x06\x95A\xbc\x03\xc1\x8e\xb6\xc2\xac\xc1\x90wv~&\xabhK\x812\x86\xe8\
\x89C\x1e\xc7\xd1\xd9Q\x138\x87(.y\xc4\x92)0\x06\x85#\xca\x10W\xa1rp\x02g\
\xb0Uzfo\xe6\x17m\xce4\xfev\x86\x93A\xba\xd2V\xb2\xb5\xad\xffZikd\x87FY\xca\
\xc8\x7f\x0b\x0b*\xee\x14\x10g`\xa9\x96q\x90\x84\x99\xa1\x91\xc8\xf8\xd8\xfc\
\xa4%r\xb4\xed\xb17\xb7\t\xa6X\xe6\x83\x86\xd0\xd9Q_\xeb#!%\x18>\xf5Ef\xed\
\xde%\x10c`\x04\x86%\x8a\x16(J<\xd8\xfe\xf1\xfd\x9b\xb2\xef\xdde\xa6\xc5rA6\
\x8bY\xf9`1\xdd\x03\x96\x97\x1f\xed\xd0\x9b"\x81\xd6\xdeL\xa4\x81\x04\x80\
\x00\xce\xd3(\x1c\x0c\x10\xa4\x0csY\xd5\xe4T\x9f:\x12\xd6_\xebY\xbb\xc1E\xd1\
9A\x1f\x8b\x0f\x85\xbf\xed\x7fH/\xf8\xed\x86\xeces\xa4y\xcc\x90F\xd1\x88\x8a\
hsT\xc9\x95\r*\xc9\xf7\xec\xd9\xfe\xebg\xbe\x85\xbe\xc1\xc9c\xfd\x96rY]+\xfa\
Uw\xd6\x07\xa7\x97\x0f\xa4(\x99\xf40\xeb!\x1ba6\xc2,\xc3l\x84l\x80\xc9\x00\
\xd9\x84\xc8\xf7_=\\6\xad\xf8\xe9\xfa\x8d2R\xe33\xf3O\x8cw\x97\xd4>\xf7\x93;\
|2\xf5p\x13\xa5\xc5B\x7f\x1c\xe9\x98^c\xd2\xc7T\xd2\x86H\x1b\x02"\xc0\x80[\
\xf3\x05>\xefw\xfe\xb2\xba\xfc\xe2\xd0V\xdd\xe8\xef\xf9y^\xec]\xff^\xfd\xe3V\
C\xaak\x82\xf6\xf9w\xf7_i\xfe\xba\'\xc6HL{\x87\x897I\x80\xa4\x13\x18\x93\x8c\
f\xdb\xf5\xbeC\x05\xa7>\x1d/\xff\xb9\xa8\xa6$On\xda\xff\xa4\xb0\x02\xf4\xdf\
\xb5\xca\x7f\xf4\xef\xf4\x17/\x9as\x1e\xd3\xd2$#\x00\x00\x00\x00IEND\xaeB`\
\x82'

def getTCNewBitmap():
    return BitmapFromImage(getTCNewImage())

def getTCNewImage():
    stream = cStringIO.StringIO(getTCNewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getFNewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x02\
\x00\x00\x00o\x15\xaa\xaf\x00\x00\x00\x03sBIT\x08\x08\x08\xdb\xe1O\xe0\x00\
\x00\x03\x9eIDAT8\x8d\xadT[h\x9cE\x14\xfe\xe6\xdf\xe4\xdf\xdd\xffO\xd9\xcd\
\x8dB6}\x88R\x8d$E\x89\xb7\xa4.\xad\x8d\xa6R\xb4\x0fb,\xd4\x87b\xc1\x07E\x02\
\xbe\xf8P\x84R\x90\x1aQ\x04_\xc4\n"\xd6[iAB\xcc\x83\xa2a\xf7%\x8d\t\x85\xaci\
\xb1\xc1\xd4\xe6\xd2\x92\xb5&Y7\xdb$\x9b\xff2s\x8e\x0f\xb3\xb7\xa4)\x82\xfa1\
\xcc\x1c\x18\xe6\x9b\xef\x9co\xce\x08f\xc6\xff\x81*\xbd\xbc\xf2\xf6WY\x11\
\x8d\xd8AIw\xe5\xe5\xe2\xc2\x02\xd5\x01\xe3\xfa\xf5\xf9w\x8e\xef\x8bw\xec.n3\
3\xf3\xa1\xb7\xce\xbb\xfc\x0f\xa0\xe2P\xcc\xcc\xfc\xdd\xe4R\xef\x89\xcfK\xbb\
\x86\xa6\xb3B\xa1j\x00@"\x91\x10w\xa0x%\x88\xa0\x14\xa4\x02\x00\xdb\x0c\x900\
Jz\x0b\x11\x11)\x00@www\x7f\x7f\x7f__\x9f\xbe\'\x93\xc9\x98\xa6\xa9\x08>A\
\x12$\xc1g\xf8\n\x00<I\x06\xc4V\xa2J\xa4\xd3\xe9x<\xae\xe3hm]\xdeq\t`\x063\
\x08 =\x03\x86\x81\n\x9e\xed\x88\xc6\xc6\xc6\xe2\xf1\xf8\xf0\xf0p[[\x1b\x03\
\xdaU\xcd\xc2\x0c0\xc0``\xdd\x03\xd1\x1d\xae\x95\xe0\xba\xee\xe4\xe4d,\x16\
\x03p\xf2\xd4)\xe2\xb2\x16\x1d(\x05WAT!\xbd\x06\xe9\xdf]Q*\x95\xea\xe8\xe8XZ\
^\xb6,\xab\xf7\x85\x17\xf5a\xad\x8b\x18\x8e\xc4\xba\x84C\x90\x04\xe6M\xa9mU4\
>>\xde\xd9\xd5U[W\xbf\xb2\xba\xae\x0f\xa3\xe8\x97\xa3\xe0)p\x00$A\x04\xa6M\
\x077)r\x1cgpp\xb0\xabkoA\x05\xc0\x00\x01\x92\x90\xf7\xe1)\xa0\n\xde\x86\xab\
\x18\x8au\xed\xca\xaf\xb7\xac\x88\x99kjj\x94R\xc9d\xf2\xd6b&Z[\xa73\x92\n\
\xae\x00l\x08\xc2\xea\xaf\xbfm\\x\xb3\xaa\xf3\xf8\x8e\xe7\x9e\xf7\x82a#\x10\
\xdaF\x91\x10BJ\xe9)v%Gk\xeb\x08P\x0cO\xc11p\xfb\xe6\xec\xec\xc7\xef\xad\xce\
\xcc93\xd3\xbb\xf6\xcc\x98\x1b\xbf\xe4r\xdc4r\xb6\xe7Fb\xfb\x1a\x15\xd2a\x10\
\x17\x1e\x9eT0j\xb0\x98\x1c\xda\xd5x9\x9b\xc8\xac,7\xb6\xeck\xf6\xa7\xe1\x9c\
=}\xe4\xc0\x99\xccT\x18D0\x8c\xb2"U|lJ\xc1\xd7u\x95\x90\x04b\x90B\xc3\xc1#\
\x99\xdb\xb1\x96x$4s\x818\x18\xb86\xd4\xba\x7f(5\xdb6\x90?\xa4Y\xca\x8a\xd2\
\xabX\x93\xd8!\xe0)(\x06\xe9A\xe0\x00\x96\xaf\\\xcd\xcfO\xaf,D\xf3g\x86\x1e;\
\xf9\xa4\x08\xbb\x91\x07\x83\xd9o\xa7F\x07\x1e\xc9\xfa\x8b\xb9s_D\x8e\x1e+\
\x13)\x05\xc5P(\xb3\xe8\xc0\xf7\xbd\xc5\x1f?\xbc\xbfc\xe7\xbd\xcf\xda\xbc\
\xde),\xdbh\x8cA\xb9\xd5{\xa2\xaf=\x9a4\xc3\xf9[\x03\xe3\x11T\x10\t\xed4U\
\xb0\x10\x14 \x02Uv\xfb\xe1\x85?\'\xe4\xd5\x9c9{\xb1\xfe\x81\xa7\xd9\xf9K\
\x98\xaew%\xf7}\xea!S\xa4\xf7\x06wnrM\xd7X\xa1\x82E3\xfaF\xc3\x81\xc3\xd6\
\xc1\x13\x92\xad{^z\xea\xf7\xcfF\xd7&./|\x92\x8avZ\xb2\xdeH\xcb\x9e\xc6\xf7\
\xcfo\xb6\xdf\x08\x84M\xd8&\xac\x10\xec\x10l\x0bv\x08V\x10\xe1 \xac0\xf2?}\
\xfdp\xfb\x92\x9f\xe6\xb9\x1b\xed,\xbd\xe5\x95\'\xe6GZ\x8f\xbe\xfcsO\xee\xcb\
R\xe3\x16Rs\xb3\x7f|\x94\\\xaa\x0b\x9b\xae\xe4R\x8b\xea\x8eE\x10\xab+\xcd\
\xa3\x89\x1f\xd2\xed\xaf\xc6\xee\xcb\xee\xaf\x9e\xba\x19kJ\xe0\xd8\xeew\xdfx\
\xbc6XrM\xe8\xcf\x7f$u\xed\x83o.\xba\x8a\x8d\x8a>,\xf4$\x03\x81j\xa1T d7\xcc\
M\x9cn>\xf7\xe9|\xe7\xa5\x96\xde\xd6&\xab\xff\xf5g\xc4\x16\xa2\xff\x8em>\xb6\
\x7f\x87\xbf\x01\xf0/O\x8d\x8d\xd3\r=\x00\x00\x00\x00IEND\xaeB`\x82'

def getFNewBitmap():
    return BitmapFromImage(getFNewImage())

def getFNewImage():
    stream = cStringIO.StringIO(getFNewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTSNewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x02\
\x00\x00\x00o\x15\xaa\xaf\x00\x00\x00\x03sBIT\x08\x08\x08\xdb\xe1O\xe0\x00\
\x00\x03\xf8IDAT8\x8d\xad\x94mL\x9bU\x14\xc7\xff\xcf\xd3\xd2\x97\xa7N\nk\x19\
\xaf\x1f\xd0\x0cq\xb0\xcc\xcc7(\xb8Y\x1c3\x0c\x17\x9dA\x92\xf9aq\x89\x89\x8e\
\xbaLc\xfc\xb0\x90\x98\x18\x9d\xcc\xb7\xc4/&\x98\x18qN77`\x18\t\x110+\t\x81\
\x02\xd1\x00\x03;"\xb8\rpT\xc6[\xe9FK\x9f\x97{\x8f\x1f\xfaBA\x16\x13\xf5\xe4\
$\xf7\xdc\xdc\xdc_\xce\xf9\xdfs\xae@D\xf8?L\x1fY^~\xf7\x1b\xbf`M\xb6\x185~W.\
\xc5\x16\x12\x90\xa4\x13\xaf]\x9bz\xff\xe8\x9e\xd2\xdd\xdbc\xc7DDTQ{A\xa6\
\x7f0\x1esFDD?\\\x99\xaf:\xf9U\xfcT\x8c\xe0$\x93\xe9\xd6\xcd\x9b\xc2\xdfL\
\x92$M\xd3\xda\xda\xda\xecv\xfb\x13\xa5\xa5}\x9e\xfe\x82\x82\x02\x8d\x01\x80\
\xc5\xa0\xe3\x82\x18\xcf7\x1aq\xce=\xfd\xfdyyy\xc3\xc3\xc3n\xb7\xdb\xe9t\x12\
\xd1\xdc\xdc\\YY\x99N\xafw\xb9\\M\x97\xbew\x1d?QRR\xfc|U\xb5\xca\x00@\xd1\
\xb8\x08!\xa1r"":\xf4N\x8b\x1aK\xb2\xae\xae\xae\xb6\xb66\x123N\x1a\xa7\xd4\
\xd4TY\xa3\x90\xcc\x04A\xf8\xe5\x8a\xf7\xb6L\x8c\xa8\xc3\xbbPU{vci\x89\xe6\
\xf1x\x1c\x0eGD]\x02\x88Pq\xa0\xb2\xb3\xa3\x03\xa2\xb8"\xf3\xfc\xfc\x1d \x10\
\x10T\xc0\xf9\xda\xadM@\x03\x03\x03\xc5\xc5\xc5D\xe01?\xfd\xc1\xc7\xae\x9aW\
\xba._&\x02c\x08\xabXe\xf0\xad@S\xef\x0e\x1a\x1f\x1f\xb7\xd9l\xd6\x94\x14\
\x0e\x10E\xdd\x96\x96\xf6^\xdd\x87\'\x8e\xd7\x845\x045\x8494\x0e"$J\xb4\x11\
\xe4\xf1x\x8a\x1d\x8ex.\xbfz\xbd\xf7Z\x8cD8P\xf9\xec\xf4\xd4\xa4\xcc\xc0u\
\xe0\x00\xe7 \xbe\xee\xa2>q\x13\x0c\x06\x1b\x1a\x1a\x8e\xd5\xb8\x88\xa2\x02]\
jjT\x14\xa5\xbd\xbd]a\xc2\x8e\xc2]\xd0C\t\xc9\xa472\x02\x11\xe2M\xba\x0e4;;\
\x9b\x93\x91\x01\xa0\xbb\xbb\xdb\x9a\x92\xea,\xdbG@sScgW\xef\x9bo\xbc\xb6\
\xb4\xb4X\x7f\xee\xbb\x95\x89\xdfV/\xbe\xa5/:\xba\xe5\x99C\x8a\xd1,\xeaL\x9b\
\x80\xd2\xd3\xd3\x89H\xe5Q]8\xc0\t}\x83^EDKc\xf3BgcJZF\xd8;\x9a\xb3\xf3\xfa\
\xe2\xeap \xf0\\f\xcf\x99\xf2\xe9\x11\xe0\x85MJ\x8b\xbf7\'\xa8\x04\x95Ac\x10\
\xef\xc1\\Wk\x8e}\xc4\xef^\\^\xb0\xe7\xee\xc9V\xc7\x11>s\xaa\xdaY\xbf8f\x06\
\xe7\x10\xc55\xb1Y,\x05\xc6\xa0r\x84\x19\x14\r\x1a\x07\'p\x06\xdb\xfe\xea\
\xc5\xdbY\xb9\xa5\xc9\xa6\xeb\x179\x19u\x13\xad\xf9{[\x87n\x14\xb4\x84*"\x94\
\xb5\x8c|w\xb0\xa2a\x8b\x00\x85\x81\xc5;\x88\x83tX\x18\xbd\x1a\x9a\x1a_\x9e\
\xb1\x86\xea[\x1f{\xfbI\xc1,\'\xef2\xfa\x9b\xc7<-\x8f\xf8\xd5\xb9\xc0\xf9\
\xaf\x93\x0f\x1fY\x031\x06F`X\xa3D\x02UU\xe6:?}`\xf7\xb6\xfb+-\x14,\x12$\x8b\
h\xcf\x02\x93\x93vZ\x8f=\xdae0\x87f[\x06\x92\x91\x00\x12\x00\x028O\xa0p0@\
\xd0\xe9-\x85\x07gn\rjW\x03\x86\x1b\xbd[\x1f\xdcG\xe1%\xc1 +\xa3\x81\x1f\x87\
\x1e2\x08>\x87q\xdb\xba\x86\x8ch\xcc\x90@\x89\x10U\xd1\xe6<(\xed?\xa9\x91t\
\xdf\x8bO\xfd\xfe\xa5gepd\xe6\xf3!k\x91\xa4m\x15}Z\xb9\xfd\xa3\x0b\xeb;[\xd4\
\x99\r\xb0\x18 \x99`1\xc1"\xc1b\x82d\x84\xd9\x08\xc9\x8c\xd0O\xdf>\\8\xaf\
\xfahr\xba\x904ea\xb9d\xaa\'\xff\xf0K}\xe5\x81\xb3\xf1\xc1\x8d\x96&\xfb\xff\
\xfc\xack>\xd5l\x905\x8a4Q\xa4\t\x88\x00#\xee,g{\xdc\xed\xbe\xc2W\xb3\xf2\
\xfc{\x93\xc6\xfe\xc8\xcat\xe3\xc8\xf6\xd3\xaf?\x9eb\x8c\xbf\x9a\x10\xf9\xfc\
{\x86&>9\xd7+3\x12\x13\xe60:\x93\x04\xe8\x92\x04\xc6t&\x8bmr\xf0T\xf6\xf9/\
\xa6\x8a~\xce\xad\xca\xcf\x94\xea\\O\x0b\x1b@\xff\xdd6\xf9\x8f\xfe\x9d\xfd\
\x05$\x9cw\x98I\x1fqY\x00\x00\x00\x00IEND\xaeB`\x82'

def getTSNewBitmap():
    return BitmapFromImage(getTSNewImage())

def getTSNewImage():
    stream = cStringIO.StringIO(getTSNewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getRQNewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x02\
\x00\x00\x00o\x15\xaa\xaf\x00\x00\x00\x03sBIT\x08\x08\x08\xdb\xe1O\xe0\x00\
\x00\x04-IDAT8\x8d\xad\x94\x7fL\x95U\x18\xc7\xbf\xe7\xbd\xdc\x9f/\xdc\x8b\
\xa2s\x17\xd8X\x06jE\x1b\\\x83\x80\xcbl%\xd8\xca\xb9i\xa0\x0b\xff\xb0\x9c\
\x8d\x8c\xfe\x08\xad9\x10\xfb\xc35\xb5\xa5\x0e\x9b\x82\xe0X\xa0\x94\xcc\xb2$\
\xda\xa8\xcc\xe0\x1f\xbc\xc1*~\xd8\x8a-#\xc5\x12\x82{\xf1r\xb9\xbc\xc4{\xdf\
\xf7\x9c\xa7?.\x17.,\xd7V=;\xdb9\xdb\xb3\xe7\xb3\xef\xf3\xeb0"\xc2\xffa1\xe1\
\xeb\xa5\xb7\xde\xf7\xb3x\x87l\xd6\xc5}\xb9\x14\xb9\x88\xc1h\x90\x86\x86\x86\
\x8f\xee\xde\x90\xefJ\x8b\xb8\x89\x88\xe8\x99\xaaK*\xfd\x83\x89\xc8\xe1DD\
\xd46\xe0-\xael\x9a\xf7Ja\x9c\xcdb1\x02\x00<\x1e\x0fc\x8c1f0\x18RSS\xdb\xdb\
\xdb\xe7\x15\xf9\xfd\x93\xfb\xf7\xedOt:\xe3d\xb9\xa8\xa8H\xcc\x06\x05\x93\
\xe6\xbds/!\x04\x07\x00\xe4\xe6\xe6\x1e8p\xa0\xac\xacLQ\x94\x8a\x8a\x8a\xd2\
\xd2R\x02\xb8\xc0\xd0\xad\xe1\xec\xec\xacX\xbb\xa3\xfb\xbb\xfe;\xa3\x13n\xb7\
\xbb\xf6\xd8!\t,*s""\xdav\xf8\x8a\x16\x11Y^^~\xf9\xf2e"R\x14E\x96e]\xd0\x9f!\
=##\xb3\xee\\\xc3\x8cF\xd3!\x9aRijzZ\x8e\xb3\x17W5/M-\xdazzz\xdcnw0\x18<[W\
\xf7|I\t\x11\x9a/\x9c\x8f_\xb6l\xd7\xee=D\x00\x01\x045\x14\xd25M\x88\x85\xa8\
\xa5\xa0P(400\x90\x92\x92\xe2t:\xc7\xc6\xc6\xaa\xdf=-\x08M\x8d\x8d\xaf\xed{\
\x9d\x08D\xe0\x1c\xb3\x1a\xae~\xdd\xe9\\\xfd\xb0\xae\xdd\x1f\xd4\xdf\xdf\xef\
r\xb9\xa6\x82A\xbb\xdd~\xb0\xeaM\xb3\xd9B\x84\xfe\xbe\xde\xbc\xfc\r\x820\xab\
C\xd11+P}\xe2\xb8k\xe3\xb6\xe8\x12-\x05uwwgeg\xc7\x18M\x05\x85\x9b\xda\xda\
\xda\x04\x81\x00\xc6\x98\xa2\xcc\xcc\xeaP9\x84\x01\xf5\xa7O\x8e\x8d\x8e\xe6m\
~!:p\x11HQ\x94\xd6\xd6V\x97k=\x11\x8a\xb6o\xaf\xad9\xe3\xf3\xf9\x04\x90\xe9z\
\xec\xd0\xc1\xca{\x81\xa0\x7fj\xa2\xae\xfa\xc4\x99\x13G\x1a.~d4[\xe7\x87tQ\
\xd7T\xce\x19\x9b\xd3:\xee\xf3O)\xaa\xc3\xe1\x00\xf0\xeb\xef\xdeO\xbe\xec\
\x88\xb3\xdb\x19c+\x12\x12\x9eMOj?W3Nt\xdc\xa3l\xad\xf8p\xbek1\x0b\xda$I\x08\
\xa1\t\x84\x8b*\x80\xbb\xdeI\x8d#$a\xb9\xc9\xe0\xb4\xc7\x1emlN\x93X\xb2Z9!\
\x8d\x05\x02\x94\xd8u\xbe\xf0\xce\r`{8|\x01\x84\xb9\xce\x82\x08\x82\xa0\x114\
\x0e\x9d\xe3\xe6\xf0\x8f;w<w\xaa,s\x8d\xf7\xba\xdf\xb7\xd2\x99\x93X[\xdb\xf5\
\xf3;\x99\x9f\x9e\xf5M\x0cZ!\x04$i\x01\xc4\t\x02`\x04\xce\xc1\t\x9a\x00\x17\
\xe0\x04Ah\xaa\xab\x1f\xf1N\xec8|\r\xb8\xc6\x80\xa4U\xd6\xadi\xf1-\xf5\xc9}C\
\x8f|?\xb3v\xaf$-R4\x12\xc4\xb4\x8e8\x86\x10\x9f\x8b\x17\x04!@\x06\xec\xdb\
\xb3\xf7\xe5\x82\xa7&\x07\x06c\xbd\x9fe\xbf\x91\xcf\xac\xaad\x1e\xf5\x7f<\
\xe8\xb9\x92\xe5\xd7\xc6\x03-\x17\x1c%\xbb\xa2\x14qp\x02\xc7\x02%\xfc\xd0\
\xb4\xd0\xf8\xd5Sk]\xab\x1e\xdc,\x93\x92\xc3l\xb2\xb42\t\\5>\x1a\xffJV\xa7\
\xc9:\xf3\xc7\x95\x1e\x07\xa2@\x0c @\x88(\x8a\x00\x07\x98!FN\xdfrw\xacW\xff)\
`\xbau=\xe1\xa1\x02\x9a\xbd\xc7Lj\xe8\x87\xc0\xe7}\x19&6\x92g^\xb5h\x8e\xc25\
\xe6\x88\xa2\x84\x89\x9a\xb4\xe2\xc9-\xb6M\x95:\xd9V\xef\xdc\xf8\xcb{\x9e\
\xe9\xde\x1bw\xeb\xfb\xe2slz\x824\xa2\x17\xae<~i\xf1@J\x06\xab\t\xb2\t6\x0bd\
\x0bd\x1bd\x0blfX\xcd\xb0Y1\xf3\xd5\x07\xeb\xd3\xbd\xda\x08\xdd\xbe\x93Nz\
\xc87\xe9\x1e\xeeZW\xf2\xe27\x85\x81fD\x16w.5\xd5?Z\xd3\xe9]n5\xa9:\x85\x87(\
<\x04D\x80\x19\xc1\xc9dO\xc7\x17#\xe9{\x93\xd6\xf8\x9f0\x0e\xfe\x96\x94\xd8\
\x81]io\x97?\xbe\xcc\x8cH\xd7X\xf8\xf3\xef\xea\xbby\xf2\xe2u\x95\x93\x14\xb5\
\x87s;I\x80\xc1\xc887X\xe4\x15\xb7{\x8f$\xb74\x0c\xe7|\xfb@\xf1\xbaD\xdb\xb1\
W\x9ffK@\xff\xdd\xfe\xe6c\xfbw\xf6\x17\xd9_{\xb2\x14\x82\x81\xca\x00\x00\x00\
\x00IEND\xaeB`\x82'

def getRQNewBitmap():
    return BitmapFromImage(getRQNewImage())

def getRQNewImage():
    stream = cStringIO.StringIO(getRQNewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getUCNewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x02\
\x00\x00\x00o\x15\xaa\xaf\x00\x00\x00\x03sBIT\x08\x08\x08\xdb\xe1O\xe0\x00\
\x00\x04 IDAT8\x8d\xad\x94[L\\U\x14\x86\xffs\x86\xb9c\x86i!M\xb9%\xb4\xa9r\
\x99\x06\x8aSJkiK\x14\x844 *\x17\xcbCS\x8d\x12\x0c6\xfab"i\xd2\x84\x98b\xd1`\
\xe5A\xc5j\x8c\x17*\x05\xd3N*\x86*$\xa0\tLQ\x12@0\x8c\x81"\x05\xc3H\xb9\xcc\
\x00\x03t\xe6\x9c\xb3\xf7\xf2\xe1\xc80`\x8d\x89\xfag%{\x9f\xec\x9c/+\xff\xbf\
\xf6\x16\x88\x08\xff\x87\xc2\xd4\xe5\xf9\xd7\x9b\xbcB\x84\xc5\xacW\xf8\xdfri\
c!\x01Z\x8d811U\xfb\xec\xb1\xa3\xe9\xfb6\x8e\x89\x88(\xff\\K\x80\xfeA|\xa3\
\x18\x11\x11}\xf5\xd3|q\xf5\'\xc1SQ\xc5\x99\x0c\x06-\xd0\xd4\xd4$\x08\x82 \
\x08\xe1\xe1\xe1\x00\x9cN\xa7\xfai\xb7\xdb\x01\x10\xe1\xbb\xee\xef\xb3Od\x9b\
\x8d\xc6\xc2\xc2\xc2\xf1Ag\xc7\x87\xe7B\x1a&"\xa2\'k\x1c2\x11c\xac\xa6\xa6\
\xc6f\xb3y<\x1e"\xe2\x9c\xd7\xd6\xd6\xda\xed\xf6\x15\xdf\x9a\xc4\xe8\xbd\xc6\
\xcb\x073\x0e\xdd\xea\x1f\xf0\xf8\x02\r\r\r\x00\x92\xb3\x9e\xda\xde\x91*Q\
\x14=\x1eOyy\xb9\xd5j\x05 \x08\xc2\xdc\xfc|Ii\x99\xc1dr\x8d\xba\xea.\xd6\xde\
\xf8\xfa\xe6\xfe\xd4\x03a:]Ee%\x80\xd8\xe4\x8c\xcd\x7f\xb79\xda\xd7\xd7\x97\
\x95\x95\x15t\xd7\xe9t\x1e>|\x04\xc0\xa5\xb7\xeb\xab\xce\xbel\x89\xb0\x82\
\x00\x82V\xa7\xbb>\xb8\x10\xbe#\xe6\xfe I\x92\\.W\xd0\x91\x80$\xbbFGS\x0f\
\xa4s\x8e\xce\xceo\xf3O\x16\x10\x811\xf8e\xdccp\xafB\x91\xff\x12\xbf\xaa\xa1\
\xa1\xa1\x94\x94\x14\x83\xc1@\x00\x07&nO$%%\xeb\xf5\x06\x02\xee\xce\xceF\xc7\
\xc4\xf9\x15H\x0c\nA\xcbA\x04\x08!\xb6\x84\x82\\.WZZ\x1a\'\xa8\xd5\xde\xde^\
\xf0D\x11\x01D\x88\x8d\x8b\xffy\xf4\x97\x00\x03\xd7\x80\x03\x9c\x83\xf8\x16O\
\xb6\x80\xf2\xf2\xf2FFF\xc6\xc6\xc7\xfd\xfe@K\xcbU\x87\xe3ze\xd5Y\x0e(\x1c\
\xcfU\xbcTq\xa6\xbc\xbf\xbfw}e\xd5\xe3\xf5\xdep\\\xebn}?8\xa4\xdb\xe3\'\xa2+\
\xcdW\xadV\xab\xc5by\xa1\xa2r\xde\xeb[\x93h\xf9\x1e\xcd\xf9i\x96\xf1\x9a\xfa\
K\xf1q\xf1:\x8d\x18\xbf{\xf7\xf9\xba\xba7{|E\xaf\xb5\x06\xe3\xdf\xe2\x11\x80\
\x92\xd2\xb2\xe2\x922"p\x80\x13$\x06I\x84ozr\xa1\xe3\xcbg\nJ\x8b\xf6\xec\x8d\
\rT/\x8aO\x0b\xb9\xaf\xfex\xb91gz\x18(\xb9\x8f\xd9\xa4\x16\x81\x13d\x82\xcc\
\xa00\x88\xe1\x98\xebn\x8b\x8b\x1a\xf6v-.-D%\x1c\x8b\x95\xc7\xe0\xff\xf4Biv\
\xe3\xa2\xcb\x08\xce!\x8a\x9b\x1e\xb1\x8d\x16\x18\x83\xcc\xe1g\x90\x14(\x1c\
\x9c\xc0\x19"sK\x17Wb\x12\x8eZ\x0c\xbf\xb6r\xd2k\xc6\xdb\x12\x8f\xb7\rN\xa68\
\xd6\xf3U\xcafGn\x1fV\x15< @b`\x1b\xa9q\x0e\xd2`adt}jli&b\xbd\xb1-\xe3\xfc\t\
\xc1\x18\xb0\xa4\xea\xbd\xd7\\N\x87\xdd+\xcf-7\x7ff9uz\x13\xc4\x18\x18\x81a\
\x93\xa2ndY\x9a\xebx\xe7\xa1\xf4]{O\x9ai-S0\x99\xc5\xa8\x18\xb0\x80v\x7f\xc4\
\x8b\x07\xbbu\xc6\xf5Y\xc7\x0f\x16\x84\x80\x04\x80\x00\xceC(\x1c\x0c\x104af[\
\xc1\xcc\xdd\x01etY7\xd9\xbb3\xe91\xf2{\x04]@\x1aY\xbe9\x98\xa6\x13\xdcG\xf4\
\xbb\xb6\xcc\x91\xea1C\x08E%\xcabdv\x81)\xb7Z!\xd3\x9e\xf2Go\x7f\xec\\\x1d\
\x18\x9e\xf9`0"\xd3\xa4\xec\x14\xddJN\xd4[-[\x07R\xd4\x18u0\xeb`2\xc0l\x80\
\xd9\x04\xb3\x01&=\x8cz\x98\x8cX\xef\xbc\xf2\xb0m^v\xd3\x9di\x1b)\xd2\xc2\
\xd2#S=\x89\xa7\xce\xdc\xcaY\xfe\x1c\x9co1;\xe0\xfd\xfd\xdd\xee\xf9\x1dF]@!u\
\x88\xd4! \x02\xf4\xf0-\xc5:\xbb\xbeq\xdb*c\x1e\xf4\x1e\xd7\xba~\x8b\x89\xee\
\xc2\xe9}\x17_9d\xd5\x07S\x13\xd4\xc7\xbfgp\xbc\xfe\x8b\xde\x00#1\xe4\x1e\
\xfey\'\t\xd0h\x05\xc64\x06s\xe4\x9d\x81\x0b\xb1\xcd\x1fMe\xf6\'\x14\'F\x9b\
\xde\xa8z\\\xd8\x06\xfa\xef\xda\xfe\xb0\xfdk\xfd\x01\xe4gt\xba\xe8\x90\xb4)\
\x00\x00\x00\x00IEND\xaeB`\x82'

def getUCNewBitmap():
    return BitmapFromImage(getUCNewImage())

def getUCNewImage():
    stream = cStringIO.StringIO(getUCNewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getProdNewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x06\
\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\
\x01\xbcIDATH\x89\xdd\x95=H[Q\x14\xc7\x7f/jj\x8d:\x14\xaaB\xfd\xc0Bt\xd0\xd2\
\xa9[\xc0\xa1\x831\xad\x11\x8d8\xbb\xb8\xf8U\x04\x11\xfa\xe1\xe2\xd0\xad\x04\
\x8av\xe9\xd2Y\xf2t\xf1\x93R\xdc\x1c\xc4E\xde\xa4\x82\xa0\x08\x8a\x82C\xa31\
\xbd/\xedu\xd0<\xf3r\xdfk$\xd5\xc1\xfe\xa7w\xcf\xfd\xdf\xf3\xe3\x1c\x0e\xefh\
\x9a\xa7\x80\xbb\x94\xe7N\xb3\xff\x17\x80\xc2\xec\xc0\xe0@\xbft3ON}\xd1\xb2c\
_\xa7Gl\xfe\xbe\x9e\xa8\xcdc\x03\x0c\x0e\xf4\xcb@ @W$\xa2$\x9f\xd1u\x00\xe9\
\x04\xe9\xed\xfc\x08\xc0\xb7\xd9w\xca;\xa5\x82p\xb8\x83\x94\x99R\x8c\xe1p\
\x07RJ\x00\xa5B!\xe2\x8a\xdf\x15\xf0K\x08Ws\xb0-D\xb0-D\xec\xfb\x84\x15{Z\
\xd3L"yb}g\xb6\xac\xaf\'\xaa)\x80\xf1\x0f\xef]\x01i=oy@w\xeb0\xc2\x8cc\xa6\
\x12\x9c\x8bK@c}\x13\xcd\xfe\x17x\x8b\xca\x88-\x7fv\xae`\xec\xad\xda\xc7l-\
\xaf~\xe2Lls&\xf6I\x8ac\xfe\xc8\xcb\xaa=\x9a\x97b\xefc|\xb2\xda\xf2*\x00!\
\xcc\x9c\x00\x80\xc5\x95E\x00\xaa*\xca\xa9\xad+\x01`o7\xc1\xe1\x91\x01\x18\
\xee\x003\xf5;g\xf2g\xb5\xd7Sf\xec\xe94\xf8\xeb\x008<2H\x1e<\xc1\xef\xaf\xbf\
\xba\x8d\xaa\x80\xf8\xcf\xd3\x9c\x00Oa\xa9\xed\xec\xf3\xa6[b\xb0\xb9\xb5\xc3\
\xd0\x9bQk\x94\x15@>J\xb7\xcbI\xff\x0ch\xa8l\xb7\x9d7\x88\xdd.\xe0\xa1\xef\
\xd1_\xef\xef\xff\xdfT\x01\xac\xaf\xad\xe6\x9d\xcc\xe9\xad\x96\xb92\x97\x16t\
97\xff#o\x00\xc0\xebW/\t\x86"\xd6\x98j\xd9;yiAw\xdd\x077QfrG\xc0m\xeb\xfeO\
\xd1\x052\x95\x80\x86up\x9d@\x00\x00\x00\x00IEND\xaeB`\x82'

def getProdNewBitmap():
    return BitmapFromImage(getProdNewImage())

def getProdNewImage():
    stream = cStringIO.StringIO(getProdNewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getProdOpenData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x06\
\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\
\x01\xc7IDATH\x89\xdd\x95\xcfK\x1bA\x14\xc7?\xbb\x896\xe2\xaf\xea\xc1\xa4\
\x075\xa2b\x89W\x11o\x1e\x8a\x10\xd3\x12\x91\x9e\xfd\x07Z\x17/*\xe8\xbf\x90\
\x1c\xb5\'o\xc1\xc3\x1e\xbc\x14+\xa2\xd4\xb6\x97RK.\xbd\xb4\xd9B\xdb\xe8\xa1\
\x84\x1e,\x89\x01\xeb\xee\xc6\xf1\xb6\xecf\xb2\xa6\x04s\xd0/\x0c\xcc\xcc{\
\xfb>\xf3\xe6\xc7[EQ\x034SjS\xa3\xdf\x0b@\xb0zb\xf1\xe5\x0b\xe1\xe7\xbc\xb1\
\xf9J\xa95\x9f\xca\x1c\n\x80\x95\x85\x19\xd9\xae\xa8\x01\xa7i\x9a&t]\x17\x96\
mKM\xd7u\xa1i\x9ap\xfb+j\x80\xf4\xf6\x91886\xc4\xc1\xb1!\xd2\xdbG\x92]\xca \
\x99\x9c\xc3\xb6li!\xc9\xe4\x1cB\x08\x00\'\xc3\xc1\xa9ybC\x8f\x98\x88E\x01\
\xb0+W\xa42\x87\xc2\x9d\x89\x04\xb84M\xbf\x1d">\x9b >\x9b\x00`k7\xcbX4\xc2\
\xf8H?g\xe5K\x00\xc6G\xfa\xa9\x08\xe1\x81(\xeewp\xd3\xfe\xbb585\xcf\xe3h\x84\
\xd8\xf0\x00\xe7\x17\x16\xa6}\x05@kP\xa5\xb3\xad\x85\xaf?N\xc9\xe5\x0b\xac,\
\xcc(R\x06\xabk\xebu\x01\xfa\xbbo\xe4\xf2\x05r\xf9\x02]]\xdd\x84:z\x00\xf8W\
\xfeK\xa9T\xf4\xf8J\x00\xd3\xb4\xea\x02\xa6\xc7\xda\x9d\xfe\x07\xa3H8\xdc\
\x07\xc0\x9f\xdfEBg_\x18\x1d\x1d\xf2\x07Xv\xa5.\xa0\xf3a\x9fk\xf4\x8b\xde\
\x8e\x07\xce\xc8\xf8\xfe\x13mi\xd9\xff\x90\xcfK\xe5\xba\x80j\x85\xbbC\xbe6\t\
\xd0\x88^\xbf\xcf6\x0f09\xe0\xad\xc6\'\x9fn\x19\xd0\xd6\xde{\xa3\xfd\xeeWS\t\
\x90\xfd\xfc\xb1\xe1`\xb5\xbe\xf5\x94\x8a\xfd\xbd\x1d\xb1\xfb\xe6m\xc3\x00\
\x80gO\x9f\x10O<w\xde\x81R\xfdO\xde\xdf\xdb\xf9\xafz\xe4\'w\xf0\x9a\x80\xdb\
\xd6\xdd\xbfE\xd7d/\x9f\xb6\x13\xc7\n\x9e\x00\x00\x00\x00IEND\xaeB`\x82'

def getProdOpenBitmap():
    return BitmapFromImage(getProdOpenImage())

def getProdOpenImage():
    stream = cStringIO.StringIO(getProdOpenData())
    return ImageFromStream(stream)


#----------------------------------------------------------------------
def getTrashEmptyData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x02\x1eIDAT8\x8d\xa5\x91\xcfK\x94a\x10\xc7?\xcf\xfb\xdb25E\xb2\\\x944"\
\xe9\xd0\xad\x84\x08\xfb\x03\xea\xa2R\xe1\xda)\xbav\x89\x08/\x05\xdd\xaa\x9b\
\xdd\xb2C\x17\x0bC\xed\x16bD\xe7$\r2\xb3p\xad-\xc9\x15\x041e\xdd\xdd\xf7}\
\x9ey\xba\xe4Vh\x8140\x0c\x0c3\x1f\xbe\xf3\x1d\xf8\xcfP\x00\xe7/\xb6t\x1aQ#;\
\xda\xb4\xe6\xfa\xf0\xa3\xec\x1d\xaf+\xddz\xeeH\xdb\xc9\xa1\xde\x9e\xbe\x1d\
\xed\x8f\x8c\xf6\xdf\x16\xc6\xa6<\x05C\xbd=}\x0c\x0c<dq\xe1+\x8e\xe3\xe2\xba\
\xce?k\xc7\xe9Stu^\xe1\xf5\xe4\xf8sg\x938\xfdv\x86 \x08\x08\x82\x900\xdc\xcc\
\x88(\x8a\x88\xa2\x8a\x9f5"\x0cCr\x8b\xb9\xb2\x12\x0f`n\xee\r\xfd\xf7\xee\
\xee\xe8\x84\xa9\xc9\x17\x00\xa8\xeet\xcb}P\x97;:\x8e\x93[\xca \xd6"b1\xda\
\xa2\xb5\xc5h!\x8e\x85$1\xe8\xc4"\x02\xda\x18\x8c1\x88\xd8\x01\x05\xd0\x9dn\
\xb5W\xaf\xa5YY\x9d\x06@\xc4\xb2\xb6ZB\xa9J<\xb7\x9a\x95\xd5\x05\xd6\xd7\nl\
\xe45\xc5\x92aoM\x0b\x13\xaf&\x18\x1e\x9cW\xde\xb6\x1f\xb2PW\x9b\xa2\xa9\xf1\
\x12\x00\xf9\xfc{f>\x8e\x91\xdf\xb5N\xa1`\x11\xed\x96g\xcb&:\xeaW\xf3@\xfdY\
\x1c7"\x93}\xc0\xc6\xc6,\x8e\xe3b\x01\xdf\xab \x8aB\xea\xeb\xaa\xb7\x02\x14.\
\xae\x13\x10\x065Da\x13\xa9\x864\x89.2\xffe\x9cL\xf6%\r\xf5G\x11+\x18c\x08\
\xa2p+ \xf0\xf7\xe0\xfbU(\xe5`\x81\xdc\xf2\x08\nEs\xea\x0c\n\x97\xc6\xfd\xed\
\x88\xb5\xc4%\x8d\xfb\x9b\xda\xb2\x07J9Xk\xb0\xd6\xb2\xb4<JmU;\x81w\x88\xca\
\xdd\xfbh;|\x81w\xb3\xc3h\x9d \xd6\x90\x88\xd9\n\xd0b\xb0\xd6 "\xc4\xf1w\xb2\
\xdf\x9e\x91\xc4\x06\xa5|>\xcc=%.\x19\xc4hD\x0c\xa2\xf5\x1f\x80\x10 \x9bYI\
\x9a\x0f\x1e\xf3\x8d\xb5H"h\x11\xb4\x16\x8a\x85%R\r\'0F0\xc6\x12\xc7\x86\xcf\
\x9f\x16\x12\xc0\x07\x02\x0f\x88K\xc5\xe4\xc6\xe3\'\x83\xb7\xb6{\xe9_\xc2/\
\x16\x92\x9b\x80\xfe\x01V\xf4\xfdz\xe1i\xaf\x1a\x00\x00\x00\x00IEND\xaeB`\
\x82'

def getTrashEmptyBitmap():
    return BitmapFromImage(getTrashEmptyImage())

def getTrashEmptyImage():
    stream = cStringIO.StringIO(getTrashEmptyData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTrashFullData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x02\xa2IDAT8\x8d\x95\x92MhTg\x14\x86\x9f\xef\xde\xb93\xa3\x9d\xc601\x9a\
\x9a`\xd1q\xa4\x89`qc\xa5V\xbb*\xa5\xf5\xa7\xfe\x0c\xb60TJ\x8b\x08n\x9af#\
\xa5\x85.,\xd8\x96\xb4iW\x82\x8a\xe0\xa2R0\xb1\x11\xda\x12\x04\x15\x04\x19\
\xb2S\xd0DM"\x13\xab4\x12\xa9c\xe2\xcd\xcd\xdc\xf9\xbes\xba\xa9cKP\xf4\x85\
\x03gq\xde\x87\x97\x97\x03\xcf\xa7\xaf\xfe\x9d\xba\x0c\xc0\xfb\x1f.\xdf\xe1\
\xc4\xf4=\xcd\x19M/a\xf7\xee\x9d\xacj\x7f\x8d\xae\xae/ih\x1a\xdb\xdf{\xa2\
\xfc\x9d\xbf\xb3\x98\xdb\xd5\xd1\xf1\xc6\xc9\xae\xceC\\8w\x03[]H\xc2o\xa3e\
\xd1\xab\x84S\x19\xe2(K\xc2k%\x9a\x11\xbe>\xf0\x13/64q\xe9\xf2%&n\x9b\xb7V\
\xaf\x95\x8b\x14\x8a9\x1d)\x0f\xeb\xde}{th\xe8\xaaFQ\xa4a\xf8P\xb7n\xdb\xa2\
\xefm\xdf\xaa\xf7\xeeM\xea\xc677h\x18\x86Z\xa9TtppPO\xff\xd6\xa7\xefnzG\x0b\
\xc5\x9c&\x1eE,\xdf\x1cg|\xfc\x16\x13\x13w\x11\x15\xd6\xbf\xbe\x9e\xb3\xe7\
\xce\xd2\xdd\xfd=\xdf\x1c\xfc\x96\x81\x81\x010\xe0y\x1e?\xf4\xf4p\xec\xf8\
\x11>\xffb3\xa6P\xcc\xe9\xc7\x1f\x1d \x9f_C*\x99~\xe66K\xa5\xdf9y\xaa\x07S(.\
?\x0cf\xcf+\xedYD@T\x11Q\x9cU\xacU\x9c\x15\xe2X\xa8\xd5\x1c\xb6\xa6\x88\x80u\
\x0e\xe7\x1c"z\xc4\x00\x14\x8a9\xfd\xf4\xb3mL=\xbc\t\x80\x882U\xa9bL\x86\x84\
\xbf\x80\xbf+\x7f2=\x151\x13Zf\xab\x8e\x85\xd9<\xa5R\x89\xde\x9f\xc7L\xe2q(S\
\xdfT\xa1)\xdb\xc6\xd2\xd6O\x00\x08\xc3!\xae^\x1f \x9c?M\x14)\x8b\x9ar@\t\
\x00\xef\x91\xc93~\x1d\xb0\xa4y\x0b\x9e\x9ff\xb4|\x94\x99\x99a<\xcfG\x81 1\
\x8ft:Ecc\xa6~\xfb\x18\xe0\xf9\xf8^\x92T\xb2\x91tj)m-Ejv\x96\xb1\xf13\x8c\
\x96\xcf\xd3\xd2\xbc\nQ\xc19G\x90\x0c\xe6\x02\x16d\xf2\x04A\x03\xc6x(\xf0\
\xd7d\x1f\x06\xc3\xcbm\x9b1\xf8\xb4\xbe\xb4\x0eQ%\xaeZ\xfc\xff\xa4\xadw`\x8c\
\x8f\xaaCU\x99\x98<E\xb6a\x1d\xc9\xc4\n2/,\xa6}\xe5\x07\\\x19\xee\xc5\xda\
\x1a\xa2\x0e\xeb\xdc\\\x80S\x87\xaaCD\x88\xe3\x07\x94\xef\xfcA-v\x18\x13pm\
\xe4W\xe2\xaaC\x9cE\xc4!\xf2\x7f@\n\xe0\xc6\xb5+\xb5|~c *\x88\x05\xab\x0eg\
\x15\xe7fY\xb9\xecm\x9cS\xac(\xb6\xea\xb8_yP\x03\x02 \x99\x00\xe28\x8a;O\xfc\
\xd2\xff#\xf4?\xe1\xef\xe6(\xa8Fq7`\xff\x01\x9d4FT\x80\xe7`&\x00\x00\x00\x00\
IEND\xaeB`\x82'

def getTrashFullBitmap():
    return BitmapFromImage(getTrashFullImage())

def getTrashFullImage():
    stream = cStringIO.StringIO(getTrashFullData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getapp32x32Data():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00 \x00\x00\x00 \x08\x06\x00\
\x00\x00szz\xf4\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\t\xa9I\
DATX\x85\xadW{pT\xe5\x15\xff}\xdf}\xec\xdd\xbb\xbb\xd9\r\x9bd\x93l\xc8\x9b@\
\x16"o\x11T0\x10 >" \xe8\xd8vP\xa0\x96N;\x16g::N[\xed\xf4\x0f\x1f\xe8X\xcb\
\xb4\x806\nj\x15m\xc5G\'\x16*\x0fADP^\x12^\t\x90w6\x9b,\xd9\xcdn\xf6\xbd{\
\x9f\xfd#\x0b\x8dau*\xd33s\xe6\xce|\xf7;\xe7\xf7\xbb\xe7\xfe\xce\xf9\xee%\
\xb8\x01[P\xb7\xf6\n\x08\xf2\x08\xa1I]\xd7\x04\x10z\xfa\xd0\xdem3n$\x17{#A\
\x94\xa1\xd6_<\xb6\x1e\xa2h\x14b\xd1\x18^\xdd\xbc\xbd\xeaF\xf2\x00\x00\xfd\
\xa1\x01\xb5\xb5\xebJ\x18\x8eER\xd2\xf0N\xd310\x1c\x0f\x02\x8d_\xb4h\xb5\xfd\
\xffF`\xe1\xd2G\xd6\xd4.}\xc4;\x7f\xd1\xba\xe9c\xef\xa9\x0c\xa6\xda\xedvmp(\
\x8cDR\xc2\x95\xa1\x08\xb2\xac6Y!l\xf5\xd8\xbd\x0b\xea\xd6\xad^\xb0x\xad^\
\xbbd\xdd\xba\xef"\xc0\x8c]\xa8\xbd\xf3g\xbf\x11E\xe3\x1f\xeb\xea\xe6Y{{\xfb\
\xd7\x16U\xdc\x94\xeci?\xfd\xd5\xa2E\xab\xed\xa5U\xb3\x1e\xd5u\xedu\xd7\x14\
\x17\xabs"\x19\n\xc6\x90\x97m\x86\x9c\x8a\x13\x9f\xdf\xf7`Y\xe5\x8cx\xde\x04\
Wk\xa5s\xae\xa5\xc25\xe3\xc3,\xabeC\xc3\xb2z\xb6\xbd\xbd{Iq\xc9T\xad\xbb\xf3\
\xf4\x97c\xf1\xc8\xb7\x9f|\xddc\x84\xd2\x977>\xff$5\x8a""\xe1\x08\xfe\xfc\
\x97\xb7\xe4\x01\xef\x95\x14\xcb\xb0\xec\xe4)U\xdc$W5SQQ\x86=\x87/`\xc07\x8c\
\x12\xa7\x1d\xb5s\xaa\xd0\xd2\xda\x86\x13\xc7\xcf\xa4<n\xb7\xaek\x9a0{\xce\
\x0c\xf5\xd6\xdb\xe71\xa1H\x1296\x01/\xbd\xb8E#\xd0V\x1f\xdc\xfb\xe6\xbb\xa3\
1\xbf%B\r\xban\x11M\xba\xcdjA\xf3%\x0fL\x02\x8f\xa7\x9ez\x94k>}\x9e\xab\xa8,\
\x85\xc9d\x86\xdb\x1b\xc0\xf1\xb3]\xf0\x05"\xe0X\x06\x03\x83!|\xb4\xa7\x19%\
\x85v\xdc\xff\xc02\x03\x14\tI)\x85\x98D\x98\x03G/\x81\xa1\x0c\xee]\\\x03\x03\
\xcfkI)\x95\xf7\xbd\xaf\xa0\xbb\xa3\xf9x\xd9\x84\x19w\xcb\xb2RP3\xb9\x8a\x04\
\xc2q\x0c\x87\x13(.v"\x1c\x93p\xc5\x1fF4\x96D"%#0\x1c\x03\xc30`\xe9\x88\x8cB\
\x91\x04:\xdd>\xc8*A0"\xa1\xad\xd3\x07J)\xe6\xdf<\x01\x9f\xee\xde/\x0f\x0e\
\xfa\x9b\x0e~\xba\xed\xd7c\t\x8cmC=\x9eR\x97\xef\xd9{\xb8c\xda\xb4j\xa3E4"\
\x9e\x94\xe0\x1d\x0c\x81\x10 \x1cI\xe0\xc8\xa9\x0e\x10\x02\xf0\x0c\x03B\x08\
\x08A\xfaJ@\tI\xef%\xe0X\x065\x13\x0b\xe1\xedw\xa3\xe5\xc2\xc5!%\xce\xad\xb9\
N\x81\xc8\xd0\x05\x87\xf74\x0e\xc8\xb2\xbc\xbf\xa9i\xbf\xee\xcc\xb7\x81\xa1\
\x04\x0c\xa5\xa0\x94\xc2\x1f\x8c\x82c\x18\xf0\x0c\x03Q\xe0\x91m5\xc1(\x18\
\xc0\xb3#k\x1c\xc3\x80cG\\\xe0Y\xb8\xaa\x9c8p\xe0KEQ\xe5\xa6C\x87\xb6F3\x11 \
c\x17n\xae\xffI\x96\x85\x9a\x06\xfe\xf0\xfb\r"e\x05\x84"\x89k\x1beE\x85\xc7;\
\x8c\xd2";,&\x1e\xfe\xa1\x10r\xecV\xc4\xe22\xce_\xea\x87?\x10\x05\x1dU\x95\
\xd2\xa2\x1c\xd8\xcc\x14[^\xd9\x1eV\xe3\xbc3\x13\x89\xeb&\xa1\xa0q\xab&N*\
\xe7\xf2\x1d\xb9\xe8\xe8\xf1\xa5\x13\x12\\\xf1\x851\xbe0\x1b\xaeJ\x07^\x7fcg\
\xb2\xaf\xa7\x07\x84\xd2\x88\xaei\x96\xf1\xa5\xa5xx\xf5\n\xa1\xc7=\x8c^O\x00\
\x04#$\xbcWB\xa8*\xaf\x82\xd3\xe9\xe4\xdc=}+\x01\xbc5\x16\x8f\x01\x80\xfa\
\xfa_\x19\nK]\xae\xd2\x8a\xe9\xf3\x89\x8e\xb7W\xde\xb7\x941gY\x91L)\xa0\x84`\
8\x9c@w\xdf\x10J\x9d\xd9\xd8\xf8\xc2\x96X00\xf4V\x98e\xea\x8e\xee~\xed9{\xf5\
\xec?I\xc3\xc3y\'\x8e\x9fq\xad\xb8w\x11\x1f\x08\xc6\xa1\xeb\xc0\xc4\xf2<\xe8\
\xba\x0e\x02\x82\x9a\xeab\xee\xe8\xb1o\x96O\x9ev\xfb\xaa\xb2\xcaiS\x8bJ\xa6\
\xe6\x14WN\x1d\xea\xedh\x0e\x93\x85K\x1f\x19\xd0t\xcda\xb7\xdb\xe4\xc2B\x07\
\xa9(+f\x97/\xaf#\xbd}A\xc8\x8a\n\x02\xc0=\x10\x84-K\xc4\xbe}\x9f\xa7.^h\xd9\
\xbe\xff\xdf\x8d\xbf\x1c\xfb$uw\xad\xdf:eJ\xcd\xba\xbb\xee\\h\xe8\xec\xf6\
\xa1\xc6U\x04\x02@\x07PQ\x9a\x8bp$\x8a\x8eN7ZZ;\xf53g[\x95\x1e\xb7G:\xb4w\
\xbb\x99\xd5t5\xef\xd5\xad\xcf\x10\x86a\xf9X\\\x82$)\xe8\xf3\x0cCU5D\xa2I\
\x10\x108\x1d6\xd8\xac&\\\xbexQI\xc8\x89\x8d\x99\xc4\x94\x90\x12\x1b[[.<\xb4\
\xf6\xa1\xe5\x86\xd6\x8b\x03\xf0\xfb\xa3(pd\x01\x84\xa0\xc7=\x84\x01o\x08\
\xb1\x180\xc5u\x13\xb9m\xdel\xee\xb7O\xbf\x98\x02\x00V\xd7A-f\x13\xdc\x9e\
\x00\x92)yD\x95\x84\xc0\xe7\x8f\xa0\xbdkD\x03\x82\x81\xc5\xa2\xf9\xd5\x90R\
\x92\x10\xccNz3\x11\x08f\'\xbd\xdc0\'\x18x\x16\x82\x81C\xce8\x13(\xa5\xd04\
\x1d]\xdd~$\xe32L"\x0f\x86Rde\x99\xa1\xaa\x8a\tH\xb7\xe1\x17_\x1c\x07Ke\x14\
\xe5\xdb`1\x0b\x18g\x13A\t\x01\xc7P\xb0\x0c\x85\xaa\xeaH&e\x98\xb3\xccqGH\
\xac\xc9D\xc0\x11\x12k,VK\\U4TU8`4\xf2\xa0\x94\xc0\xed\x0e\xa0\xa6\xda\x89I\
\x13s@h\x1c\xe7.\x9c\xc3\xb67\xde\x97\xf4t\x07\xb2\x84\xd2\xc7v\xbc\xf7\xc9\
\nEUjR)\xd9f\x12\x05\xfd\xf9g\x9e`S)\x05\x1c\x9b\x1e6 \xf0\xf9"\xa8[x\x87y\
\xd7\xae=\x8d3g\xae\xbf\xe5\xd4\xa9F\xf9*\xf8\xcc\x99\xeb9\x96%\x8d\xf5u\x0b\
\xcd\xb2\xa4"\xdb&^\x8ba\x08A$\x1a\xc5\x93Om\x84`4~-\xcb\xd2iU\xd6\xce\x02\
\xe4$0f\x0e\xcc\xbcg\xbdhS\xb5\xa3\xab\xeek\x98ZXX\x8c>O\xf0Z\x1b\xb2,\x83\
\x9bg\x95a\xcb+o\'\xda;\xbb.\xab\xb2\xf2;E\x97\xdbX\xc2M`x\xf6\xd9\xaa\xf2\
\xf2\xaa\r\x8f>l\x8cF\x92\x10\x04\x0e\x8a\xac\xa2\xbd}\x10\xf9\x05V\xb4^\xbe\
\x88\x0f>\xde\xbdk\xef\xbf^\xbd\'c\x1b^\xb5\x81\xcb\xa7\xe4\xf1\xe57I\xc9\
\x84\xb4\xa4\xaev.\xe7\xf3EG&!CA\tA8\x9c@\xc3\xdd\xb7q\x82Qt\x84B\x91{\xa1\
\x93\x9f\xe7\xe5\xe6\xac\\\xbax\xc1\xf8\x1f=p\x0f\xd7\xd9\xe1C\xae\xdd\x02J)\
\x02C1H)\x15ee\xb9x\xf7\xfd\xa6\xc4` \xf8\\o\xc7\xe9sc\t\\7\x88\x0c\xba\xf2\
\x8f\xee\xde\xde\x97}>\x9f\xd1Yh\xc3\xe0`xd\xce\x83@N\xa98\x7f\xce\x83\x9aj\
\x17\x99?o\x96\x85\xe7Y\xc8\x92\x8aP(\x81\x8e6\x1f,f\x03\x18fd\xba\xc7\xa2\
\x12\xf2r,\xf0\xf9\xfd\xe8\xe9q3C\xd6\xc8\xceL\xda\xb9\xee,\xd8\xb7\xef\x9d\
\x98\xaaj_|\xd4\xb4G\x1b_4\x0e<\xc3\x8e\xcc\xf9\xf4\x8c\xa7\x84\xc2?\x18A\
\xfb\xa5A\xb4\x9e\x1f@G\xdb tUGee\x1e\xf2\x0b\xac\xa0\x94@\x96U0 \xd05\x1d\
\xc9D\x12\x9a\xae\xf3\xf6\x90\xc9\xf1?\x11X\xb0\xe4\xa7\x95<\xcb\xd6=\xb8\
\xf2n\xea\xe9\r\xa4\x81Yp,\x93\xf1\xd0\xe1Y\x16\x9a\xaa!\x95\x94A\xc9\xc8\
\xc1\xa5\xc9:8\x96\x81\x94T\xe1\xb0;\xb0jY\xbd&\x1a\x84\x9d\xc8p\xf6|K\x03\
\xae\xfb\xef\xe7\xc7\xe9\xa6\xc3+\x97\xd5;\x8a\n\x8a\xc9p0\x0e\x93\xc9\x80\
\x8a\xca<p,\x03ERA)\x1d\xf9\x0eH\xb7(\xc3Ph\x8a\x8exTB\x96\xd5\x08\xb3\xd9\
\x00\xdb8\x11F#\x0f)\xae \x15\x971kf59\xf1\xcd\xb9\\{^e\xa4\xab\xe3\xf4\xb1\
\xef\xac@~$\xebM\x9b5\xab\xb2\xbe\xeev\x12\xf0G\xe1pd!\xbf\xc0\x84]{>\xd3\
\x93R\x0c\xd5\x93\x0b\xe1,\xca\x86\xcdj\x04\xcf\xa5+\xc100\x9b\x04\xe4\x17X\
\x91\x9bg\x81\xd7\xe7\xc3\x86\xc7\x9fU67\xfeM\xc9u\x9a \x9a\rP\x15\x1d+\x1a\
\x16\x1bTM\xdf\xf4\xbd\x15()\x9f.H\xb2\xba\xec\xb6\xb93\x98\xf2\xf2|\xb4\\\
\xba\x88\x1765\xa6.\xb4\xb6\x9f=\xf2\xf5\tSKk\x87n\x10XvB\xa5\x139\xb9V\xc4\
\xc2)\x88"\x8f\x92J;N\x9d9\x877v|,\xfd\xfd\x83]\x92w\xa0\x7fc 0\x1c<t\xe4d\
\xc5\xec\xd9.\x962\x04/nz-)\xc9\x89\x1f\xf7t\x9em\x19\x8dy\xdd;YP\xb7\xe6qA\
\x10\x9eu\xe4\xe50\xdeA\x9f\xcf\xd3\xdb\xb6\xfe\xc2\xd9\x03-\xa2h\xcd\xaa\
\x9ark\xc3\xb8q\x8ezU\xc5\xdc\x1d\x8d/\xc1\xdd\x19\x84\xc9b\xc0\xa5\xdeK\xd8\
\xfc\xd7\x1dZ`\xa8\xff\xe9\xee\xb6\xe3\x07#\x91`\x18\x80<kN\xc3\x1d6{\xfe&YV\
\x8c\x9a"?q\xf8\xe0;[\x01H\x00\x94\x8c\x15\x00\x80\x9e\xce\xe6\x93\xf9\xce\t\
]\xd1Hl\xf8\xe4W\x9f\xacq\xf7\x9e\x1f\x04\xc0\xc9r\x8ax=m\x9d]\xed\xcd\x9fM\
\xaa\x9e\xb3j\xde-\xd3\x05M\xa2\x10\xcd<\x8e\x1e\xffFkn>\xb5\xad\xf9\xe4\xee\
&IJ\xaa\xe9Tz\xbf\xe7r\xbb\x06\xf2>\xd5\xc9\'\xc7\x8e~\xf8O\x00j\x1a\\\xbf\
\x8a\x97\xe9\xd7L9r\xf0\xbd\x9d\x00\x9a\x00\xf0\x00\x0ci\xa2Z\xdauMUz\xfb\
\xfb\xaf\xd4\x94\x14\x94B\x109\xb4ut\xcb\xa1\xb0\xbf#\x1d\xaf\xa5\x814\x00jw\
\xdb)w7\xd0\x9e\x06V\xd2\xf7\xaeY\xa6?#\r@\x02@|\xd45\x06 \x9a\xf6p<\x1ek\
\xee\xf5x\xf5\xdc\x02\x0b@5\xf4\xf4\xf5\xb3\xc1\x80\xe7$\x80\x10\x80\xc8\xa8\
\xbd\xb11y\xa4\xb1`\xd7i \x831\x00\xb8\xb4\xb3\x00\xd8Ys\x977\x98\xcc\xd9\
\xdb\x00\x80R\xaa\xe8\xba\x1e\xff|\xef\xf6j\xfc\xb7\xc4W]\xce\x04\xfaC\t|\
\x97\xd1Q\xf1\xfa(\xffA\xf6\x1f\xec\x9f9\x0b\xb0\x99+\xba\x00\x00\x00\x00IEN\
D\xaeB`\x82'

def getapp32x32Bitmap():
    return BitmapFromImage(getapp32x32Image())

def getapp32x32Image():
    stream = cStringIO.StringIO(getapp32x32Data())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getapp16x16Data():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xb7IDAT8\x8d\xcd\x92Ok\x13Q\x14\xc5\x7f)\x91v\x9aP\x1cS\x13\xac\x95\
\x88\x90\x10h\x03\n\xa50 \x81\x16\n)]F\xb1\xf3\t\xfc\x02b\xa0\x1f\xa0\x98/\
\xe24\x84\xecG\x0b\t\xcc&\xd0\x85\x9bl\xc2\x84b\x06\xeab\xf2\x87)e\xc6\x99Z$\
.t\xc6\x996Y\xb9\xf1\xac\xce{\xf7\xbd\xc3\xbd\xe7\x1e\xf8G\xc4\xe6\x15\xf6\
\x8eZS\x9f\x9f\x1e\xef\xce}\x17\xf7\x89\xf4\xea\xfda2_V\x00l]\x95\x01\xaa\
\x95\x1c\xb5f?R\xbb-\x16\x08$\xf3e\xa5Z\xc9q\xa6[\xb4)+\xd9\xb4\x801r\xc9\
\xa6\x05\x0c\xca\xcaNq\x95\xed\xbc\x08\xb4\xa6a\x91xX\xedL\xb7\xc8\x88K\x1c\
\x96\xd6\x83;\xa9\x90B*\xfc\xad\xdf\xc6\x82Ol]\x95\xdb\xdd1\x00_M\x87\xba6p>\
}1\xa9k\x03\xe7\xdb\xc4\x05\xa0\xdd\x1d\x07\xe3\xf9\x88\x85\r\xcb\xa6\x05\
\xa4B\x8a\xba6pn.\x8d\xcf\xde\xe8\xbcqo%SZ~\xb4\xf1\xe6\xf5\xcb\xa7b\xa77\
\xc1\x18\xba\x11c\x83\x0e\xaa\x95\x1cR!\x05\xc0\xfd\xa4\x90\xf0F\xe7\x8dN\
\xe3\x83rsej+\xcb\x82\xe8\x8fS\xad\xe4fo\xa1\xd6\xec\x07\x1d|\xbf\xfeq\xbd^,\
\xbd\x93\x00am\xf3\xed\xa5\xed:@\xa2\xd3\x9bp\xa2\xb9w=8=\xde\x8d\xd9\xba*\
\x1bC\x97\xecC\x81\xe7\xcf\x1e,\xba?\x177\x9e\xbc8\xf8\x18O\xa4\xb7\xf6\xb7\
\x1e\'\x00\x8c\xa1\x8b\xad\xabrx\x0b\x01\xd9;jMw\x8a\xabd\xc4\xa5;N\xfb0-\
\x8fvw\x1c\xc9\xc2B\xf8\xc1v^\xc4\xb4<N\xb4\x0b:\xbd\t\x00\xbf\xdb\xbe\xc0\
\xb4\xbc?9\x88"\x92*\x7f\x1b\xb6\xae\xca~\xb0j\xcd~p\xf6\xc7\x9d+0Kl\xd6\xa7\
\xff\x0b\xbf\x00\xe7P\xb4\xbak\xea\x08\xf2\x00\x00\x00\x00IEND\xaeB`\x82'

def getapp16x16Bitmap():
    return BitmapFromImage(getapp16x16Image())

def getapp16x16Image():
    stream = cStringIO.StringIO(getapp16x16Data())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTRFailData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01FIDAT8\x8d\xa5\x93\xbfJ\xc3P\x14\xc6\x7f7\xa9\x05\x9bN\x05]\xda\x12G\
C]\x84\xd2\xa9\xd0)$*Yt\xd0\'\x10\xff\x0c\xe2\xe0\xaaOQ\x04\xdf\xc1\x0cJm\
\xc4gp\xf3\x05\nn\xa1\x99\xb4\x01M{\x1dJ[b\x93\xb6\xda3\xdd{\xee\xf9>~\xdf\
\x81+\x84\xa2\xb2L)K\xa9\xe7\x19\xb8\x8e%]\xc7\x92\xb3f2\xb3\xc4\xba\xbd7<\
\x83\xdc\x7f|\x16\x7f2\x00\xd8>9\x03\xa0\xe3\xb5Rg\x12#\xb8\x8e%u\xd3f\x10\
\x86\x0c\xc2\x10\xdd\xb4I\x8b\x92J\xb0ux\xc4\xf5\xe6\x06\x007\xafot^\xbc\xc5\
\x08\\\xc7\x92\xe5z\x83~\x10\x8c{\xfd \xa0\\o$R$F0L\x93\xc8\xf7\xc7\xf7\xc8\
\xf71Ls>\x81\xebX\xb2T\xad\x11\xf9>Q\xd0\x9d\x18\x04]"\xdf\xa7T\xadMQL\xed@\
\xcfk\xf4\x9e[\xc8\xcf\x0f\xce\xed\x1d\x00\xc2\xf6\x03B\xcb\xa3\x17\xcb\xbc\
\xa7\x11\xb8\x8e%\x8bF\x05\xa1(\x88\xd5\x1cB\xcb\xd3\xf4\xda4\xbd6B\xcb\x0f{\
\x8aB\xd1\xa8\xc4(b\x04"\x9bE][\x075\x83\xfc\xfe\xe2\xe2\xf2j\xf2\xb6\x92E-\
\x14\x10\xdd\x80\x98f\xf4\x99\xbc\xa7{\xd9\xbb\xbdK\\\xd4\xef\xca\x9d\x1ec\
\xef\x1e\x88\x98\xc1\xc8d\x11\x83\x91x\xca\xe0?\xf5\x03\x1c\xb1i\x1bi\x9c\
\xd5\x87\x00\x00\x00\x00IEND\xaeB`\x82'

def getTRFailBitmap():
    return BitmapFromImage(getTRFailImage())

def getTRFailImage():
    stream = cStringIO.StringIO(getTRFailData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTRPassData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\xc4IDAT8\x8d\xa5\x92\xcfk\x13Q\x10\xc7?\x9b\xa6e\x93l~\xd8\xaaEi<4\
\x04"\xd5\xb6P\xa4Er\xf0(\x82\x01\x11\xeaU\x04\xff\x80B\xcf\x16/\xd2[o^\xdaK\
\x8f-\x15\xc1\xd2\xd2K\xa0b\x0f\x05]\x8a\xc4C\xb1\x18b\xb3\xd94\x88\xcd&\xa9\
&\x1b\xb5\xcfS\x9e\xddM\x02B\x07\xe60o\xe6\xfby3\xc3(\x8a\xa7\x87\xf3\x98\
\xe7\\j\xc0\xdb-\xb1\xb8:#\xce\xc6O\xa7\x17\x94Nu\x8a{\x84\x9601<\xc5\xd4X\n\
\x80\xdd\x8fo\xd8\xcf\xee\x020\xe8\xbbI\xea\xfe\x93\x7f0\xc5\xd3#}imV\xbc\
\xd3WD\xc3\xae\x88z\xa3,\xfdk!#2\x9f\xb7\xc5\xef?M\xb1\xb46+\xd67\x96EK\xd3\
\xb6\x83\xf1\xc4\x1d\xecf\x8dF\xb3J\xdd\xae`\x94\xf6\xf9^\xc9s=v\x1b\x80\xc7\
\x0f^\xf0\xeb\xb4\xde\xbe\x83\xc5\xd5\x19\x11\xbb6F\xc3\xb6\xf8V\xceS\xfba\
\xa1\xf9\xc3\x9c\xfc\xac01\x92\x92\x82\x8d\xed\x97\x1c\xdb\x86\x8c\x1d\x1d\
\xdc\x88\xdf\xa2t\x9c\xa5\\=bb$\x85U;r\x88?|zM"6\xee\xe8\xd8\x01\xa8\xda{\
\x94\xac\xf7L\x8eN\x0309\xfaH\xe6\xd2\xfa\x1c\xa7\xde/x\xd5bw\xc0A\xd6\xc4\
\xefWI\xeb\xcf\x1dEi\xfd\x19>\xd5K(\x18\xe0 kv\x06D\xb5$\x86Yd\xe0\xc2 Z\xc0\
/!i}\x0e\x9f\xdaK$\x1c\xa2\xaf7\x82a\x16\x89j\xc9v\xc0\xdd{\x0f\x15\x80\\\
\xce\xe2R\xff\x10!-\xcc\xdb\xbdy\x82\x81 \xfd\x91\x8b\xa8}\x97\xc9\xe5,G-\
\xb8.1\xaa%9,\xecpX\xc83t\xf5\n\xf1\xe1\xb8\x1c\xcd03\xb2\x06\x16\xa4\xa6\
\xed\x12\xb76_\t\x80\xfc\xc9\x8e\xe3\xbd\xd5\xf6\xd9\xdf;\x02\xdc \xf7\x88n\
\xeb\n\xf8_\xfb\x0bf\xaa\xaa\xea!T\x9d\x8e\x00\x00\x00\x00IEND\xaeB`\x82'

def getTRPassBitmap():
    return BitmapFromImage(getTRPassImage())

def getTRPassImage():
    stream = cStringIO.StringIO(getTRPassData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTRPendData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01\x8fIDAT8\x8d\xa5\x92AK\x1bA\x14\xc7\x7f3;\x99%K\xba\x12\x13\x1bH\
\x89b\xcc\xc1\x80\x11\xf4\xe8\xc9\x8bPz\xed\xb9\x1f\xa3\x9f"\x1f#\xe7^\x8b\
\x90KO=\xf6`\x14/QQ1\xb8\x1a7\x12t\x8b\xc9&\xdbC\x9a%\x93\xac \xf8\x87wx3\
\xef\xfd\xe6\xfd\x87\'\x84\xb4x\x8f\xe4\xbb\xba\x01\xf5\xdaE\xbd\xd1\x8cf\
\xf3\xef\xdf\x0eDR\x9d\x98\xb70m\xdc\xae|b\x7f\xb7\x02\xc0\xaf?m\x8e\xda7\
\x89 \x03Po4\xa3\xad\x8d"{\xb52\xa3q\xc4t\x04\x01XR\xf0\xbbu\xce\xf1Y\xc7\
\x80,X\xd8\xd9\\\xe31\x18\x10\x8e"\xc6\xd1\x04!\x85@Y\x82\x9d\xcd5\x8e\xcf:\
\xc9\x16\xea\x8dfTY-P]/\xf1w\x102\x0c\xc7\x06 \xa5$i\xad8\xbd\xb8\xa6}\xe5\
\xc5S\x18\x13T\xcb%\xfa\xc1\x90\xe0%d\x10\x9a\x13h%\x18\x8e"\xaa\xe5\x12\xed\
+/\xee1\x00\x97\xf7\xcft\xfc\x80\xde\xd3\x80\xe0%$\x1cO\x00J\n\x1c[\x91\xcdh\
\x8a\xcb\x8ea\xc1\xd8\x83[\xcf#\xad-\xb4\x92XR\xa0\xfe\x87%\x05ZI\xd2\xda\
\xe2\xd6\xf3\x92\x01\xb5\\\x9f\xbb\xae\x8f\xeb\xa4\xf8\x90\x9e\x84c+\x1c[\
\xc5\xb9\xeb\xa4\xb8\xeb\xfa\xd4r\xfdE\xc0\xe7/_\x05@\xcf\xef\xb2\xb2d\x93wm\
\xb2\x19M6\xa3\xc9\xbb6+K6=\xbfk\xd4.\xfcA-\xd7\xa7\xe5A\xc7{\xe0c~\x99b\xa1\
\x10[;\xb9\xf4\xe3\x9aY-l\xe2\xe1\xcf\x1f\x11@\xeb\xc15\xce\xa7\x8d\xb3\xaf\
\'\x02\xe6A\xf3\x16\xe7\xf5*\xe0\xad\xfa\x07\xb0\xcf\x8bB11\x9c\x93\x00\x00\
\x00\x00IEND\xaeB`\x82'

def getTRPendBitmap():
    return BitmapFromImage(getTRPendImage())

def getTRPendImage():
    stream = cStringIO.StringIO(getTRPendData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTRSkipData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x10\x00\x00\x00\x10\x08\x06\
\x00\x00\x00\x1f\xf3\xffa\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\
\x00\x01zIDAT8\x8d\xa5\x92\xcdJ\x02Q\x18\x86\x9f\x994\x1a\xcb\x0cG4\xb4\x82\
\xcc\x8d\x90\x81A\xfb\x08\x82h%\xb4\xee\x1a\\u\x15\xae\xba\x017\xae\x03W!\
\x08\xd1\xa2uA\xb9\n\xfbQhpl\xc6\xd2\xc9\x94\xa0\xb1MJ\xc7\x19)\xe8]\x9d\xf3\
\x9d\xf3>|\x7f\x92$O\xf1\x1f\xc9\xffr\x03\x9eI\x0f\xb9By\xf0\xf3~t\xb8+\xb9\
\xfd\x93\xc6K\x18\x1a7\x121\xb67\x13\x00\x9c_V\xb9\xae>\xb9\x82\x04@\xaeP\
\x1e\xac\xafE\x89\xc7B\x98\xedw\x16\xe6\x14\x00^\xdfz\xa8\x01\x1f\xf7O\x06\
\x95;M\x808z\x10\x0b\x07\xd1\x0c\x8b\xad\xe4\x12\x9ai\xa1\x99\xdfg\xc3"\x16\
\x0eN.!W(\x0f\x12+\x11|33\xecl\xae\xba\xf6\xe5\xec\xf2\x81\xf7~\x9fj]\x1fe!d\
\x90\x8c/#{\xbc\x14/n\x1d\xe6\xe2\xc5-\xb2\xc7K2\xbe,\xc4\x85)\xd4\x9e\xbb\
\xd4t\x8bN\xb7\xef\x00\xd4\x8c./\xbdOl\xc9+\xc4\x85\x0c\x1a\xba\x8e\x8cM6\
\x93v\x00\xb2\x99426\r]w\x07\xa4\xd4\x0eM\xa3E\xc0\xaf\x90/U\x008.^q\\\xbc\
\x02 _\xaa\x10\xf0+4\x8d\x16)\xb53\x028\xc6\x18\x8d\xa8L+\xb3\xb4\xad\x1e\
\xf67_\xc6&\xe0W\xf8\xe8u\xd1tS\x18\xa3\xd0\x83\x94\xda\xe1F\x070\t\x87\x82,\
FB\xa3\xd2\x1e\x1f\xeb\xa3??\xe5\xd8\xc4\xd2\xe9\xc9\x00\xe0\xc6\x9c\x17\xe2\
C\xe3\xde\xfe\xc1\xe4Mt\x03\r5n\xfc\x15\xf0W}\x01U\xa5\x8bMG\xc8\xa7\x8e\x00\
\x00\x00\x00IEND\xaeB`\x82'

def getTRSkipBitmap():
    return BitmapFromImage(getTRSkipImage())

def getTRSkipImage():
    stream = cStringIO.StringIO(getTRSkipData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getTRRunData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x06\
\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\
\x01\xd5IDATH\x89\xdd\x95Ok\x13A\x18\x87\x9fwfw1\x1a\xbd\x08\xde\xe2\xc1HK[\
\xb1Z=T\x88\xe0\xa1\x82x\xb1P\xe8\xb5\'\xc1k\xbf\x83w?@\xbfA\xc1\x83 \xa2\
\x07/"\x14-H\x11\xff\xb4*\xdb\x04c\xe9I+\xa9M\xf6\xcf\xecz\xd0\x84\xda\xccn\
\xd3\xc4\x1e\xf4\x85\x85e\x98}\x9e\xfd\xcd\xbc\xb3+\xa24\x87Y\xeaP\xe9\xff\
\x85\xc0\xb1\r.,\xce\xa7\xed\xfb\xdb\xb3\xf7d\x10\x81\xec\xdd\xe4\x85\xc5\
\xf9t\xe4\xcc\x15&/\xdcbi\xe5\x01\xab\xfe\xd2@"\xab`n\xfa.ij\xdaSx\xf1\xfa!k\
\xeb/\xfb\x12Y\x97\xc8\x98\x16&1\x90& \xc2\xa5\xd1).\x8f]g\xf9\xcd\x93\xce\
\xf2\xf5*\xb2\n\xa28\xc0\x98\xe8w\nAD\x00a|\xf8*\x17G\xae\xf1\xea\xdd\xd3\
\x9eE\x19\t\x02\xa2$ M\xe2]\xa3\x02"\x88(\xce\rMr~\xb8\xc2\xca\xea\xb3}E\xd6\
6\x8d\x93\x00\x137\x89\xe2\x9d]\xd7\x0f\xa2h\x9b0l\x10\x84\r\x82\xf0;\xa3\
\xe5\t\xa6\xa7\xeeP>=\xfeG\xe7\xf5\x90\xa0Ed\x9a\x18\x13fF\x17\x04Q\nm\\\xc6\
\xceN\x00\xbf\x1ado\x12\xab`+X\xa6\x19n\x12\x99\xed<<J\xb98\xea\x18\x05\xef\
\x14&iXg\x1e\xf0$\x0b\x82B\x89\x8b\xa3\x8f\xe2\xea\x13\x1cqO\xe2W\xbfR\xad\
\xafS*V\xba\x9e\xb0&\xc8zc\x11\x07\xad<\xb4*\xe0\xe9"~m\x8b/\x1bo\x01(\x15+\
\xdc\xb89\xd3\xb5\xd1\xfb\x08\xf2\xc0k\x1d0`\x85g\nD4"\x1a\xad<\x94\xb8}\x81\
s\x05\x9e>N\xa2[\x18\x15\xe2\xa8\x02~\xed\xdb\x81\xc1\xb9\x82O\xfe&C\xe5\x12\
\xef?~\xe0\xf3F\xad/p\xa6\xa0T\xacP\xad?\xa7Z\xf7\x07\x02\xb7\xab\xebk\n\xf0\
\xf8\xd1\xfd\xce\xa9\xec\x17\x9c+\xf8\x9b\xf5\xef\xff\x93\x7f\x02K\xef\xc1Co\
\xc870\x00\x00\x00\x00IEND\xaeB`\x82'

def getTRRunBitmap():
    return BitmapFromImage(getTRRunImage())

def getTRRunImage():
    stream = cStringIO.StringIO(getTRRunData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getAFCopyData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x06\
\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\
\x01\x95IDATH\x89cddbf\xa0%`\xa2\xa9\xe9\x0c\x0c\x0c,\xc4(:\xb66\xfe?)\x86Z\
\x05/d\x84\xb1\x19\t\x05\xd1\xb1\xb5\xf1\xff\xf9\x04\xa5\x19\x84E\x14\x882\
\xfc\xed\x9b\x07\x0c\x9f\xde?\x85[B\x94\x0f\x90\r\x87\x19\x80\x0c\x90\x1d ,\
\xa2\x80"O\x94\x05\xc8\xe0\xd3\xfb\xa7\x0c\x9f8\xfdP\x05\xdfo\xc2\xe9C\x92-`\
```\xf0\xf0\nfD\xe6\xe3\x8b#\x92-\xe0\x13\x94\xc60\x90OP\x1a\xa7z\x14\x0bp\
\xb9\xe4\xfe\xed\xa3(|EUk\xa2\x1d\x04\xb7\x80\xd8\xd4\xf2\xf6\xcd\x03\x86\
\xfb\xb7\x8f\x12m\t\x8a\x0f`\x86\xe3K)\xe8\xa9d\xb1w9\x03\x03\x03\x03C\xec\
\xd6N\xac\x16`\xcd\xc9\xb0\x94\xf2\x89\xd3\x8f\xe1\'\xab\x1a\x03\xa7\x98\x0b\
\x86\x850\xc3#\xbce\x18"\xbce\xe0\x16\x11e\x01\x03\x03$\xa5xx\x053\xb2\xff\
\xbe\xc5 \xc1\xff\x1dC\xbe\xa9\xb4\x1a\xe1\xa0\xd7\xbfp\x19\x83=\x15\xa1\xa7\
\x94\xfb\xb7\x8f\xa2\xa4\x94\xc5\xb3\xb61\xf8\xfb\xea0\xbc\xb3|\xcf\xb0b\xee\
C\x06\x06\x06\xdcA\x84\xd5\x02XXc\x03M\xa5\xd5\x10\xc3\xdf\xbc\x87X\xae\xc5\
\xc2P\xd7\xdd\x8a\xd3\x07$\x95\xa6\xe8\x86\x1f>\xfe\x14\xaf\xe1$Y@\x8e\xe1D[\
\xd0TZ\xcdP\xdd\xd5J\xb2\xe1D[\x00\x03v\x81Y\x0c\x87\x8f?e\x88M\xf3"Z\x0fq\
\x15\xces\t\x86\xd62H\xb2\xac\xebne\xb8\x7f\xfb(F\xf1A\x91\x05;\x96\xe4b\x88\
a\x14\xd9\x18`!\xa6\x05\xc4\xba\x8a\x81\x01\xb3\xc8\xc6\x05\xe0\x16\x10v\x11\
:XH\x94*\x82u2\xa5\x00\x00\x90#\xa0Q\xe1\x9d7\x9c\x00\x00\x00\x00IEND\xaeB`\
\x82'

def getAFCopyBitmap():
    return BitmapFromImage(getAFCopyImage())

def getAFCopyImage():
    stream = cStringIO.StringIO(getAFCopyData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getAFDeleteData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x06\
\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\
\x02ZIDATH\x89\xb5\x95?K\x1bq\x18\x80\x9fK\x9a\x98\x13\x1aR\x0c\x18\xac\x8d\
\x89p\x85\x0eR+\x08\xa6)\x08\x0e\xe6O\x9b,\x01q(8\x08\x05\xfd\x00]2\x88\x9f\
\xa0 \x85l%\xfd\x00\xc9 \xc5\xd6\xb1\xb4\xc4.U:h@\xd0\x04\x8b\xe6\x84\x84\
\x94,\xda\xd6x\x1d\xd2\xbb\xde\xe5\x92z\x11|\xc7\xf7\x8e\xe7\xb9\xf7\xcf\xef\
w\x82`\xb3s\x93a\xbbQ:p\xabS\xb2\x90[P:\xe5\xc5>;\x8f\x9e\xbd\x11z\x11\x08\
\xed-*\xe4\x16\x14\xf7\x9d\xbb\x0cx\x03\xa6\x97k\xd52\x8d\xfa1\x8fSo-K\x0c\
\x02\x15\x0e\xd0\xa8\x1fky\xbd\xb0W\x89&h\x877\xc4\xe4?\xc1\xd9:A)|\xadJ\x0c\
C\x1e\xf0\x064x4\x9e\x12\xa2\xf1\x94\xe0>[G\x15\xab\xb1\xff\xea+rV6\xcd*\x9f\
\x88(\xf9D\xc4\x90\xeb\xb8E\xd1xJ\xd0W\xa5\xb6\xc7%\xdef+\x9dcd6\xc6\xc8l\
\xcc \xc9\'"\x8a\x9a\xd7K\xba\xaei\'\xb8\xd3\xe5\x06@i6\x19\x9b\x9b\xc7?=\
\x83\x9c\x95\xc9\'"\x8a\x7fz\x86\xb1\xb9y\x94f\xd3\xc01\xcc (\x85\xb5\xfev\
\x83\x1f\x9d\xfe\xa6\xb8\x9a\xe1^\xe8\t\x0fbq\xb8\xfc\x0b\xb4\xd9)\xbe\xdf\
\xe0\xfb\xd6g\xfa\x97^h]0\x9d\x83\x01o\xc0\xb0\xa2z8\x80\x7f\xd0\x01+K\x14W3\
H\x93\x93(\xe7\xe7\xad/u\xb9Lp\x83@\xec\xb3S\xab\x96\rp\xf9\xe8\x0b\xf7\x1f\
\xa6L\xed\xf3\x0f:(\x02\xe7\x9f>r\xd9\xf8\xd1*\xc0\xed\x01Z\x1b\xa7\x0fm\x06\
\xa7\xb6\xa74\xea\xc7\xd4\xaae\xed\xa1\xcf?\xc5\xfe\xb7\x9cI\xb0\xb9\xbc\xc6\
Pp\x14A\x14\xb1\xb9=\xd8\xdc\x1e\x04Qd(8j\xda.M\x10\x8d\xa7\x84\x86\x98\xbcR\
\xb2\xb9\xbc\xc6\xf0\xf8\x04R(L\xa9R\xa1\xb0\xb3Mag\x9bR\xa5\x82\x14\n3<>\
\x81\x9c\x95\xcd\x15\xf4"\xc1\xe1\xe4`o\x97\x93\xd2!Rz\x91\xe0\xcb\xe7\x9c\
\x94\x0e9\xd8\xdb\x05\x87\xd3P\xad\xe9.\x02\xf8\xb0\x91S\xd4\x03\xd6>\x13\
\x97/Iq5\x03\x80\x94^\xc4\xdb\xdf\x9aA\xa9\xf2\x13\xf9\xf5;\x00\xc3\xa0;\n\
\xacH..~ipu\xb5\xd5\xebE\xbfE]\x05WI|\xfe)\x13\\\x0f\xb6$\xf8\x9f\xc4\n\x1c,\
\xfc\xd1\xba\r\xde\n\xdcR\x05\x9d*\x01,\xc1{\x12\xe8%\x80%x\xcf\x02U\x02X\
\x82_K\xd0k\xfc\x01\x9e"AF\xe0Y}\xf7\x00\x00\x00\x00IEND\xaeB`\x82'

def getAFDeleteBitmap():
    return BitmapFromImage(getAFDeleteImage())

def getAFDeleteImage():
    stream = cStringIO.StringIO(getAFDeleteData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getAFPasteData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x06\
\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\
\x02$IDATH\x89\xb5\x95\xc1k\xd3P\x1c\x80\xbf\xb46k-K\x19m\xb5c\xb3v\x85\xb9\
\xc3\x06\xe2\x980T\xf0h\xa92\x18\x11\xaf\xdb\xc5\xab\xe0?\xb1\xab\xe0U\x10\
\xbc\xcaz\xd9a\xd3\x93\xb7)^Dv\x10\xf4R\x8b\xc5\xae\xb6\x16R\xd6\xd4\xd7b=\
\x8c\xbc%M\x9a\xa6\xc2\x02\x0f\x92\xf7^\xbe/\xbf\xdf\xfb\xbd\x17E\t\x859\xcf\
+t\xaet\xe0\x82W\xe7aik\xe0\xd5\x1f\x9b\ns\xe3\xc1Ke\x12\x812\x9c\xa2\xc3\
\xd2\xd6@\x9b\x99#\x99\xca\xb9&7\x1be\x8cV\x95[\xfa\xab\xc0\x12\x87\xc0\x82\
\x03\x18\xad\xaa\xec\xb7\x0b\'\x95H\xc10\xdc\x88m\x9c\t\xcc=\x16\x16o;"y\xdf\
0\x1d\xa0\xc7\x8f\x9ey\n\x1d\x8b\x9cL\xe5$\xbcP\xd4\x95BQW4s\x0fKl\x9f\x07\
\xb0\xbd\xb9\xc3\xf6\xe6\x8eo\x04\x9eUT(\xea\x8a=*\x0b\x18\x8dM;\xe6\t\xd1F\
\x88\xb6\xaf\xc0\xb3\x8aF\xc1w?}\x94\xe3\xf9++t\xba\xbf\xe5\xfd\x8b\xd7Oe\
\xe5\xd9\xd3\xe5\x12h3s\x9ep5\xaa\x01\xf0\xf0\xde\x13D\xafM\xaf\xdf\xc1\x14\
\xa7\x82\xa5\x85eV\x16o\xa2F\xa6\xd9}\xfb\xdc?\x82d*\xe7(Q;\x1c\xe0D|\xe3D\
\xfc\xa0+~\xf1w \x00\x08)*Q5M|0\xef\xca\x84\x14\xc4\xa6\xc24\x1be\x07\xbcV\
\xf9\xc0\xb5\xeb\xba\xe3\x85\x83w\x07\x00d.id\xaf^\x04\xa0\xf2\xbdC\xad~\x04\
\x1c\xb9\x04r\x91\x8fC\xf71ZU\x9a\x8d\xb2\x1c\xccd\xd7\xf9\xfa\xb9$\x9f\xef\
\xe4\xef\xcaV\xab\x1bD\xd54Q5M\xadn\xb06\xbb\xca\xda\xec*\xcb\x89\xbc\xe3$\
\x90\x82BQW\x8c\xd8\x86\xaf${9"\x1b@\\\x9d\'\xae\x9e\xa6%\x930\xc9$L\xb4\xc8\
O\xef\x08\x82J\x86\xd3e\xa5\x0c\xcev\xb9}\x93\xba\xce"\x807\xfb\xa5\x81\xb5\
\xc1F\xadI\xe5\xb8G\xbf/\xe8\xf7\xfe\x00\x10\xe9}qlR_A\x10\x89\xe8\x1at\xcd\
\xb6\xeb\xcb\xedp_\xc18I&\xbb>\x16>V\xe0\'\t\x02\x87\x00\x7f\xb4Q\x0b\x1f\
\x04\x1e(\x02\xafH\x80@\xf0\x89\x04v\t\x10\x08>\xb1\xc0\x92\x00\x81\xe0\xff%\
\x98\xf4\xfa\x07U\x15$\x0c\x7f\x9bS\x19\x00\x00\x00\x00IEND\xaeB`\x82'

def getAFPasteBitmap():
    return BitmapFromImage(getAFPasteImage())

def getAFPasteImage():
    stream = cStringIO.StringIO(getAFPasteData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getAFEditData():
    return \
"\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x06\
\x00\x00\x00\xe0w=\xf8\x00\x00\x00\x04sBIT\x08\x08\x08\x08|\x08d\x88\x00\x00\
\x01\xdaIDATH\x89\xb5\x95=H\xc3@\x14\xc7\xff\xd7\x165\x83\x85\xd0\n\x8a\xad\
\xd4A\x07\x11\xc4M+\xb8\x1aR?\x90,.\xd2\x0eE\xd0YE\x10\x1c\x84\x0e\xd6Y\x1cD\
\xc1\xcd%\x8b\x83\xe8,TWW\x17\xbf(T\xac\x06\xe2\xd0\xd2%\x0er\xe7\xa5\xb9\
\xb4\x97\x82o\t\x1c/\xbf\x1f\xef\xde{\t!\xa10\xfe3B\xffJ\x07\x10\x11\x1d\x96\
\xcc\xac#:W\xba\xc3\x98\x9c?#A\x04\xa4\xf9\x8aJf\xd6\x89\xaa\x83\x88\xc5S\
\x9e\xe4\xcf\xea3l\xab\x8c\xb4q.-q\t(\x1c\x00l\xab\xcc\xceyaP\t\x134\xc3me\
\xf1OP\xbb\xc4\xf0\xc8LG\x95\xb8\x9a\x1c\x8b\xa7\x18\\\xd3\r\xa2\xe9\x06\x89\
\xd6.A\xc5|^T\x1d\x14\xf6\xaa\x98T\x9dbRe\xe7\xc2)\xd2t\x83\xf0U\xd1\xeb\xe9\
Qz[J\x8aI\xd5Y\xc9$\xb0\x92I\x80J|\xc7T\x04\xef\xea\x89\xfaJ\xd6\xe7\xfa\x98\
\xc8\xfeh\xb0\x1c\xcf\x98\xd2\x17Dp\x00\xecY\xaf}3\xc9\xd1\xc1\t\x96\x16\xc6\
\xf15m\xe1\xe2\xf4\x05\x00\xb0\xfdf\x11\xa1 \x16O\xb9F\x94\x87\xd3\xe0%\xfb[\
\xbb\xbf\xf0\xaa\x05\x00x\x1a\x8b\xe0\xf8\xe6\x835\x9f]\x91\xd2\x1d\xc6g\xf5\
\xd9\x05\xaa\xbc\xde{\xe0\xbc\xa4\x19~{W\xc6\xea\x9a\xee\xcac\x82\xf7P\x06\
\xb6UvI\xfa\x87\xa6\xf0\xf8`\n\x05\x9b\xf9\x9c\x07\xbewX\xf04\x9e\t4\xdd \
\xb6\xb2(%\xd9\xcc\xe7\xb0[,x\xe0\xa2pMQ\x10\t\x00\xcc.o\xb8\xe0t\x01\xf9%\
\xf5|\x8b\x00\xe0\xfa\xcat\xe8\x82\xf1\r\xaf\xbc\xdect\xc2@:\xb3\x83\xf4@\
\x05\x00\x84p\xbaG\xbe\x02\x19I\xa3n\xb3Q\xf5\x83\xb7\x14\xb4\x93\xf4\x0fM\
\xb5\x85\xb7\x15\xb4\x92\xc8\xc0\x01\x89?\x9a_\xe3e\xe0R\x15\x88*\x01 \x05\
\x0f$\xe0%\x00\xa4\xe0\x81\x05T\x02@\n\xde\x91 h\xfc\x00\xcfA'\x8e|\x83\xcf\
\x81\x00\x00\x00\x00IEND\xaeB`\x82"

def getAFEditBitmap():
    return BitmapFromImage(getAFEditImage())

def getAFEditImage():
    stream = cStringIO.StringIO(getAFEditData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getSNewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x02\
\x00\x00\x00o\x15\xaa\xaf\x00\x00\x00\x03sBIT\x08\x08\x08\xdb\xe1O\xe0\x00\
\x00\x03\xd9IDAT8\x8d\xad\x94mh[U\x18\xc7\xff\xf7\xa6\xcd\xcb\xbd\x86v.\xa5\
\xd0\x97\x0f\xb5L+\xb6(\xf3-\xd5\xb29\\\x16\xa3\x0c\xaav\x81\xf9a(X\xea\x10\
\xc6\xc6\xf4\xc3\x18\x08"SAd"\x0c*Xq.\xb5L\x91\x82\xfd`\xb3A\x0b\xb5k\x11Y[3\
\\\xb1\xb5\xedZi\xacMk\x926M\x93{\xcfy\x1e?\xdc$M\x8bED\xff\x1c8\x0f\x9c{~\
\xe7y\xbd\n3\xe3\xffP\x89\xb5\xbd\xfaN(\xae\x94\x97\xe9\x0eA\xbbr9\xbf\xb1\
\x82R\x9b:33\xff\xee+\x07Z\xf6\xef\xcb\x1f33s\xe0\xfc\xd5,\xff\x83(\xbf$33\
\x7f\xfbS\xac\xed\xdc\xe7\x85S\xd5\xc2iNgi\xfe\xe5p8\xdc\xd2\xd2\xa2i\x9a\
\xc7\xe3ioo\x0f\x87\xc3\xf9\'A\x04)!$\x00\xe8v\x1b)j\xc1\xdf\x9cED\x12\x00\
\xd0\xd3\xd3\x13\n\x85\xba\xba\xba\x12\x89D$\x12inn\xee\xec\xec\x94\x04\x93 \
\x08\x82`2L\t\x00\x86 \x15JQ\xe4\xcc\xcc\xfc\xfc\xdb\xbd&33WVV\xa6R\xa9\x82\
\xc3\x92X\x10\x1b\x92\xb3\x823&\xa7MN\x19\xbc\x96e\xc9\x1c\xfey\xa5\xed\xfc\
\x95\x9d\xa1\x15\xe4v\xbbC\xa1\xd0\xc4\xc4\x84\x10\xc2J\xb0UUf\x90e3\xc0``\
\xc3\x00\xd1\xd6\xc5\x9d\xa0\xfe\xfe\xfe\xa1\xa1!\x9f\xcf\xe7v\xbb\xfd~\xff\
\xcd\x9bc\xc4 \xcaQ\x98!%2&6%\xa2)\x08swP}}}www,\x16\x9b\x9a\x9a\xf2z\xbd/\
\xbe\xd0\xca\x9c\xf3\x8b\x18\x19\x81\r\x81\x0cA\x10\x98Q\x9c\xa2\x9d\xa0\x82\
jkkO\x9dy\xc30\x0c\xce\xd7+#\x90\x95 \x1b\x08 \x02\xd3\xb6\xef\xb7\x81Z[[C\
\xa1\xd0\xd2\xd2\x92\x94rff\xe6dG\xfb\x99\xb3o\x12 \x08i\x13\x86\x04J`lf%C\
\xb2\x95;\xfe\x1b\x103wtt\x8c\x8e\x8e655\xe9\xba\x1e\x0c\x06\xfd\xcf<{\xea\
\xf4Y!\x90\x01\xa0C\xd1\x90\x9a\xfee\xed\xe2\xb1\xcd\xef{\xe1\x84\xe1p\xa96g\
\xe1zI\xc1R\x14%\x10\x08\x1c\xf6\x07.~|\xc9\xaa\x111\x0c\tC\xc5\xfa\xc2\xdc\
\xca\xb5\xaf\xf7\xf8\x82\x99\xd9\xa9\xda\xa6\xd9\xd5\xcd\x89d\xb2\xb5j\xf8\
\xb2o!\x02\x1c\xdb\tB\xae\xb2\xb9\xbcZ\x8d\'$\xd4\xbb\xb0<\xd8W[\x11\x89\x0f\
\xac&V*\xea\x0e\xd4\x98S\xc8\\\xbe\x10<\xd4\xb9:\xe9\x02\x11Tu+4\x99wAJ\x98\
\x84\x8c\x84! \x08\xc4 \t\xcf\x91\xe0\xeaZu]K\x99s\xf6+b\x87m\xba\xaf\xe1`\
\xdf\xf8\xdc\x03\xbd\xe9\x80E\xd9\xf2(\xba\x8e\x94\x80[\x81!!\x19d-\x02\xdb\
\xb0r\xebvz~*\xb1X\x9e\xee\xec{\xec\xad\xa7\x14W\xb6\xecAG\xfc\x9b\xc9\x91\
\xdeG\xe2\xe6r\xb2\xe7\x8b\xb2\xe3\'\xb6@RB2$\xb6(\x96a\x9a\xc6\xf2\xb5\x8f\
\xee\xdb_Y\xff\x9c\xce\x1b^E\xd3\xd5\x8aj\xc8liS\xf9\xc9G\x07\xed\xae\xf4R\
\xef\x0fe(\x02)\x00\x03DE\x14\x82\x04\x14[\x89\xdext\xf1\x8f1q;i\x9f\xbb\xb1\
\xf7\xfe\xc3\x9c\xf9S\xb1g\x8d[\xc9\xef\xc6\x1f\xb2+\xd1\'\x1c\x95\xdb\xcao\
\xe5X\xa2\x88b\x11M\xd5s\xe8\xa8v\xe4\x9c`\xed\x9e\x97\x9e\xfe\xf5\xb3\x91\
\xd4Xd\xf1\x93\xf1r\xaf&\xf6\xaaQ\xe1\xab\xf8\xe0\xea\xf6>Rm.;t;4\'t\'t\r\
\xba\x13\x9a\x03.\x074\x17\xd2\xd7\xbb\x1fn\x8c\x99Q\xbe\xb3\xd0\xc8\xc2XI<9\
?\xdcp\xfc\xe5Q_\xf2Japs\xa1e\xe3\xbf_\x1a\x8c\xdd\xed\xb2g\x05\x17\x06\x9d\
\xac\xf6u`=Q32\xd0\x1fm|\xad\xfa\xde\xf8\xc1\xd2\xc9\xdf\xaa\xab\x06pb\xdf\
\xfb\xa7\x1f\xdf\xe3(TM\xb1~\xfe\xc3\xe3\xd3\x1f~y#+Y-\x9a\xc3\xdcL2`+U\xa4\
\xb49u\xcf\x9d\xb1\x0b5=\x9f\xce{\x7f\xackk\xa8\xd2\xde{\xdd\xaf\xec\x00\xfd\
w\xed:\xfd\xffV\x7f\x01\xf9\xe3}\xb8\x14G&l\x00\x00\x00\x00IEND\xaeB`\x82'

def getSNewBitmap():
    return BitmapFromImage(getSNewImage())

def getSNewImage():
    stream = cStringIO.StringIO(getSNewData())
    return ImageFromStream(stream)

#----------------------------------------------------------------------
def getGENewData():
    return \
'\x89PNG\r\n\x1a\n\x00\x00\x00\rIHDR\x00\x00\x00\x18\x00\x00\x00\x18\x08\x02\
\x00\x00\x00o\x15\xaa\xaf\x00\x00\x00\x03sBIT\x08\x08\x08\xdb\xe1O\xe0\x00\
\x00\x03\xfdIDAT8\x8d\xad\x94[H\x1cg\x14\xc7\xff\xdf\x8c\xbb\xb3\xbb\x93Uk\
\x94\x88\x97\x07[m\xbd\xa5-Z\xbb\xd2\x86\xc4\xb0\xdd\x94\x10%m\xf0\x82E\xa4\
\x85>T\x8a"B\x1f\xa4\xd0\x97\x90\xf4"\x85\xfaP\x9a\x85"M/\t\x11\x8a\xb4>\xb4\
DQPc)\x05M\x13\xaax\xdd5\xa2M\xbdt\xd5\xdd\x8c\xbb3\xf3}\xa7\x0f\xa3\xab\x86\
H\n\xed\x9f\x03\xdf\x19\xce\xcc\x8fs\xcew\xce0"\xc2\xff\xa1\x04\xebx\xfb\xe2\
\xb7!\x96\x9c\xa4*\xa68\x94K\xbb\x071\xd8dinn\xe1\xf2[\'O\x94\xe4\xed\x86\
\x89\x88\xe8\xec\xfb7b\xf4\x18\x89]\xe3DD\xf4\xe3\xef\xab\xd5\xed_\xc5\xa3\
\x92\x85s9\x1c6\x00\xc0\xe2\xe2bUU\x95\xaa\xaammm\xfd\xfd\xfdEEE\x00fgg\x19c\
\xd2\xae\xc9\x8c\x01P\xed\xb2`R<\xdf\x1dO\x08\xc1\x81H$\xe2\xf5z}>\xdf\xca\
\xcaJYY\x99\xcf\xe7\xab\xad\xad\x05\x90\x9b\x9b\xdb\xd9\xd9\xd9\xdc\xdcLD\
\x9aA\xb2,\x03\xd0M!\x81=\x0c\xb2\xd4\xd9\xd9\xe9\xf5z[ZZTU\xad\xaf\xaf\xb7\
\xd9l555V(\x18\x0c644\x00(y\xb6(\xa4\x99\x02\x90$\xec\xe3\x1c\x04uww755\xc5\
\x1fu]/,,\xb4\xfc\xa1\xa1!\x8f\xc7\xc3\x18\xbbP]\x0b\x02\x01\x0ft\x08q\x08hj\
j\xaa\xa0\xa0 \xde\x14\xc6Xbb"\x80p8<77g\x18\xc6\x11\xb7\xfb\xfck5Q\x03\xdb\
\x1c\xcb\x11\x98\xc6! \xb7\xdb\xadi\x9a\xd5\x94\xe1\xe1\xe1\x94\x94\x94\xe9\
\xe9i\x00###\x1e\x8f\'!!!x\x7f+;\xaf0*`\n\x10\x1d^Z]]]WW\x97\xc5\x9a\x99\x99\
\xa9\xac\xacLOO\x17B\xf4\xf5\xf5UTT\x84\xc3\xe1\x8f/_\xbcp\xaeB\x00B\x80\xc4\
\xfeOw\x07\xd2RGGGkkkvvvii\xa9\xa2(\x8d\x8d\x8dVv\x81@\x00@{{;\x80k?\xdc\xe4\
\x04N B|H\x0f\x80\x88\xc8\xe9t\xfa\xfd~\xbf\xdfOD\x9a\xa69\x1c\x0e\x00\xb7\'\
\xe6c\x0cd\x07\x17\x08\xff1\xb5\xdd\xfd\xde\xb6\x14qW\xbe\xae+NIv<\xa24\xc6\
\x18\x00C@\xe7\xd09\x93\x145*\xe4\x8d(\xa2\x12\xb6\x16\x03\x81/>\t\xcf\x07\
\xa3\xf3\xd3\xd9\xc7\xe7\xed\xdb\xb777)c\xe4\xaa\xef\xde\xc0\xa3K#\xcb\x08\
\x82`\x10\x0c\x0e\x93C:\x82\x95\xc1\xde\xec\xb4;\xa1\x81\xf5\x8d\xb5\xb4\x9c\
\x93Y\xc64\xa2W/\xd5\x9e\xbe\xb2>\xe9\x84\x10\x90\xa4\xbd\x8c8A\x00\x82\xc09\
\x0c\x81(\x87n\xc2\x14\x10\x04\xc1\x91z\xa6v}+3\xe7D\x92c\xbe[\x90"\xcf\xf4\
\xe6\x9f\xea\x1d\x0f\x14\xf5hg-\xca^F\xcbaDL\xb8\x19t\x0eN\x10\x96\t\x90\x8c\
\xb5\xbb\x13\xda\xc2\xf4\xc6R\xb2v\xa5\xf7\xc5\x0f*\x983\x96\xf4\x9c\x12\xfa\
~r\xb4\xe7\x85\x90\xb1\xb2y\xfd\xeb\xa4\xfa\xc6=\x10\xe7\xe0\x04\x8e=\x8a\
\xe5\x18\x86\xber\xf3\xb3gJ\x8e=uN\xa5\x07\xe5\xcc\xa5Ji\x99\xe01\xdb\xf1\
\xe4\xa6\xb2A\xbbS\xbb\xdf\xf3k\x12\xf6\x81\x18@\x80\x10\xfb(\x02\x1c`r\x82Z\
\\\xb5\xf4\xd7\x989\xb1i\x0f\xdc:Z\xf0\nE\xfff\xf6\x98~w\xf3\xa7\xf1\xe7\xed\
l\xf9%\xe5\xd8\x81[\xb3z\xcc\xb1\x8fb\x11\r)\xf5t\x95\xebL\xbbI\xae\'\xdf\
\xf0\xcev\x8dF\xc6\xee,\xf9\xc7\x93\xcb]\xe6Qi\xd9\xf4\xa5u\xdc8x\xfd\x92\
\xec\xb4C\xb5\xc3\xe5\x80\xea\x80\xea\x82\xea\x80K\x81S\x81\xcb\t\xad\xef\
\xbb\xd2\xe2Uc\x99\x82\xf7\x8a\xc9\xd4\xd76^^\x18\xc9\xaf\x7f\xf3\x17\xdf\
\xe67\xf1\xc5\xdd)-\x16\xfa\xf3\xf3\xc1\xd5\x14\xa7=f\x12\x11\xc4\xee\x10\
\x10\x01\n\xc2\x1bY\xa3\x03?/\x17\xbf\x93\xf9t\xe8\x94mr13c\x00\x8dy\x1f\xb5\
z\x9eP\xe2\xb7\xc6\xac\x9f\xff\xc8\xf8\xcc\xa7\xd7n\xc58I\xfb\xf6pg\'\t\x90m\
\x8cs\xd9\xa1\xa6\x06\xc7.e]\xffr\xa1\xfc\xb7\x9c\xea\xfc\x0c\xd7\x87\xef\
\xbe\xca\x1e\x02\xfdwI\x8f\x7f\xe5\xdf\xe9\x1f\x84\xa81\xdc\\V\xdc7\x00\x00\
\x00\x00IEND\xaeB`\x82' 

def getGENewBitmap():
    return BitmapFromImage(getGENewImage())

def getGENewImage():
    stream = cStringIO.StringIO(getGENewData())
    return ImageFromStream(stream)

