.. $Id$

.. header:: 
    .. raw:: html

        <!-- begin_mainmenu $select -->
        <div class="tabs">
          <ul>
          <li>
          <a href="index.html"><span>Main page</span></a>
          </li>
          <li id="current">
          <a href="afeditor.html"><span>afeditor</span></a>
          </li>
          <li>
          <a href="testrunner.html"><span>testrunner</span></a>
          </li>
          <li>
          <a href="acknowledgement.html"><span>Acknowledgement</span></a>
          </li>
          <li>
          <a href="changelog.html"><span>Changelog</span></a>
          </li>
          </ul>
        </div>
        <!-- end_mainmenu -->


===============================
AFMS: Short Manual for afeditor
===============================

.. contents::

----

Overview
--------

|afeditor| is the editor to create, edit and manage artefacts related to a software product.
|afeditor| supports the following kinds of artefacts:

* Features
* Requirements
* Testcases
* Usecases 
* Testsuites

In addition to these artefacts |afeditor| supports plain text sections and a glossary.

Here is a screenshot of the afeditor main window.

.. image:: images/screenshot_overview.png

The top left panel contains a tree view of all artefacts. 
If you select an artefact node like *Features* or *Requirements* in the tree view 
an overview list of these artefacts is shown in the top right panel.
If you select a specific artefact in the tree view the details of this artefact are shown 
in top right panel.

The lower panel contains the filter panel. Depending on the kind of artefact selected in the 
tree view the filter panel changes according to the artefact kind.
Pressing the "Apply" button in the filter panel hides all artefacts in the tree view 
and the corresponding artefact list views which are not passing the filter.
Pressing the "Reset" button turns off filtering.
The filter view may be collapsed or expanded with the "Filter" button.
The fields "FT", "RQ" and so on on the bottom right side are indicating which filters
are active. For example if the testcases are filtered the indicator "TC" turns on green. 

Actions in the |afeditor| are performed by selecting `menu items`_, pressing `toolbar buttons`_
or using some `shortcut keys`_.


Starting |afeditor|
-------------------
You may start |afeditor| from the command line calling "afeditor.py". For Microsoft Windows, 
if you don't like the console, you may run |afeditor| by double clicking the file 
``afeditor.pyw`` in the explorer window. If you have downloaded the Win32 binary release simply
execute ``afeditor.exe``.

When running from command line you may enter several command line options. Type::

    afeditor --help

to see the available options.


Create a new product
--------------------

After starting the program you can create a new "software product". 
From the file menu select "New Product" and select enter the database file name 
for the product in the subsequent dialog.

Afterwards you should edit the product properties by selecting the "Product" item in 
the tree view. Enter a product title and a more or less detailed description and save 
your changes.

In the product description input field you may use either plain text, `HTML markup`_
or  `reStructuredText markup`_.


Add features to the product
---------------------------
Now you can start collecting the features of the software product. Select the 
"New feature" item from the "New" menu or press the corresponding button |new_feature_btn| 
in the toolbar.

In the appearing dialog you have to enter the title of the feature and you may enter the description
of the feature. Again, for the description, you may use plain text, `HTML markup`_
or  `reStructuredText markup`_.

Beside title and description the following attributes of a feature could be defined:

Priority
    Essential | Expected | Desired | Optional.


Status
    Submitted | Approved | Completed

Risk
    Dangerous | 3-Risk | 2-Risk | 1-Risk | Safe

Version
    A version identifier

After saving a unique ID is assigned to the feature.

Along with the feature basic data a changelog is provided. Select the changelog tab 
and enter a change description. This description is mandatory once the status of the 
feature is "submitted". If the status is "completed" you are not allowed to change a feature. 

After you have entered a couple of features try to select the "Feature" item in the tree view
in the left panel. You will see a list with all your features in the right panel. The list can
be sorted by clicking into the column header.



Add requirements and relate them to features
--------------------------------------------
Adding requirements to the product works the same way as adding features.
Select "New requirement" from the "New" menu or press the toolbar button |new_requirement_btn|.
In the subsequent dialog you may enter title, description, priority, status and version of the requirement.
Furthermore the following attributes are available:

Complexity
    Low | Medium | High

Effort
    Months | Weeks | Days | Hours


Assigned
    The name of whom the requirement is assigned to

Category
    Functional | Reliability | Up-time | Safety |
    Security | Performance | Scalability | Maintainability |
    Upgradability | Supportability | Operability |
    Business life-cycle | System hardware | System software |
    API | Data import/export | Other

In the "Rationale" tab of the dialog you could enter the origin and the rationale of the requirement.
The tabs "Attached Testcases" and "Attached Usecase" shows a list with all test cases and use cases.
You may select test cases and use cases belonging to the current requirement.

The tab "Related features" shows a list with the features to which the requirement belongs to.
To edit this list, you have to edit each feature, select the "Attached Requirements" tab and check each
requirement to be attached to the feature.

Another way to attach a new requirement to a feature is to select the feature in the tree view and issue
the "New Requirement" menu command. The new requirement becomes automatically attached to the selected 
feature.


Add use cases and test cases and relate them to requirements
------------------------------------------------------------
Select "New use case" or "New test case" from the "New" menu to create a use case or a test case.
Of course you also can use the corresponding toolbar buttons |new_usecase_btn| or |new_testcase_btn|.

Use cases have the following attributes:

Summary
    A brief description of the use case

ID
    After saving a unique ID is assigned to the use case.

Priority
    Essential | Expected | Desired | Optional.

Use frequency
    Always | Often | Sometimes | Rarely | Once
    
Stakeholders
    Stakeholders for the use case. You may enter stakeholders or select previously 
    entered stakeholders from a list.
    
Actors
    Actors for the use case. You may enter actors or select previously 
    entered actors from a list.
    
Prerequisites
    Prerequisites for the use case

Main Scenario
    Main scenario of the use case
    
Alternative Scenario
    Alternative scenarios to the main scenario
    
Notes
    Notes and hints
    

Test cases have the following attributes:

Title
    A brief description of the test case

ID
    After saving a unique ID is assigned to the test case

Version
    A version identifier
    
Purpose
    Purpose of the test case
    
Prerequisite
    Prerequisite for the test case
    
Testdata:
    Testdate to be used in the test case
    
Steps
    Steps to perform the test case
    
Notes and Questions
    Notes, hints and questions 
    

If you have selected a requirement when issuing the command "New use case" or "New test case"
the new artefact will be attached to the selected requirement.
Another way to do this is to edit the requirement and check the required test cases or use cases 
in the list shown in the tabs "Attached Testcases" or "Attached Usecases".


Create test suites and attach test cases
----------------------------------------
Test suites are simply collections of test cases. Attributes of a test suite are Title, ID, Description,
execution order of test cases and of course a list of test cases.
When creating a new test suite with either menu command "New testsuite" or toolbar button 
|new_testsuite_btn| a list with all test  cases is shown. You may check any test case that should be 
in the test suite.

Test suites are important for the testrunner_ program, because *testrunner* allows 'execution'
of all test cases in a test suite.


Adding text sections and glossary entries
-----------------------------------------
Adding text sections and glossary entries works quite the same as for other artefacts.

For new text sections select "New text section" from the "New menu" or press the corresponding 
toolbar button |new_textsection_btn|. As a special feature of text sections you can edit the order of 
text sections. Select the "Text sections" icon in the tree view and press the button "Edit order"
below the list of text sections. An editor will pop up where you can shuffle around the sections.

Adding glossary entries could be done by selecting "New glossary entry" from the "New" menu.
A toolbar button is not available. Instead of that there is a "Add" button shown at the end 
of the glossary list if you highlight "Glossary" in the tree view.


Deleting artefacts
------------------
You may delete any artefact using the toolbar button |del_af_btn|, the menu command "Delete artefact"
from the "Edit" menu or simply with the Del key. Actually the artefact is not deleted but goes
to the trash. An artefact could be restored by double clicking it in the corresponding view of the trash.

Intentionally there is now way to empty the trash, so no artefact could get lost.


Export artefacts in HTML or XML format
--------------------------------------
You can export all artefacts of a product into a HTML or XML report file.
XML reports only contains the artefacts. HTML reports contains some additional problem analysis:

* Features with no requirements attached
* Requirements with no test cases attached
* Use cases without related requirements
* Test cases without related requirements
* Test cases not in a test suite 
* Test suites without test cases

To create the report use the menu commands "Export as HTML" or "Export as XML" from the "File" menu.

Report creation could also be done using the standalone scripts
*afexporthtml.py* and *afexportxml.py*.


Import artefacts from another database
--------------------------------------
Importing artefacts is quite easy. After issuing the command "Import" from the "File" menu you can select 
the database file with the artefacts to import. After this a dialog with one tab for each kind of arefact 
is shown. Each tab contains a list with corresponding artefacts and you can check the artefacts to be 
imported.

On top of the dialog there is a checkbox "Select related artefacts automatically". If it is checked
and you check for example a requiremt to be imported, then all test cases and use cases related 
to that requirement are checked too.


Using filters to show only specific artefacts
---------------------------------------------
Pressing the botton "Filter" in the bottom panel expands or collapses the filter settings window.

.. image:: images/screenshot_filterpanel.png

Filters are specific for each artefact. The image above shows the filter window for use cases.
There are 3 types of filter settings:

* Filter those artefacts where text fields fulfills a certain condition. In the example above only 
  those use cases are shown where the text fileds 'Main scenario' or 'Alt scenario' contains 
  the string 'Save'. Other available conditions are for example "doesn't contain the word" or 
  "matches the regexp" (regular expression).
* Filter those artefacts having the selected properties, i.e. where 'Priority' is "Essential' or 'Expected'.
* Filter artefacts changed within a certain time intervall by a certain user.

After changing the filter settings the button 'Apply' makes the filter to come into effect.
The button 'Reset' clears all the the filter fields and switches filtering off.


Archiving a database
--------------------
*afeditor* supports writing a artefact database to an archive and converting an 
archive to a database.
The command "Database to archive" from the "Archive" menu asks for the name of the archive file 
and saves he current database to an archive.

The opposite is done with the command "Archive to database" from the same menu.
You are asked for the archive file name, the database file name and whether to open the 
database after conversion or not.

.. image:: images/archive_to_database_dialog.png

Archive format is XML. Main intention of archives is to have a human readable format 
which allows for generating diffs between or merging of different archive versions.
Of course archives could be used to import and export from and to various other formats.

Creating an archive and converting an archive to a database 
may also be done using the standalone scripts 
*afarchivetodb.py* and *afdbtoarchive.py*.


.. _`shortcut keys`:

Keyboard shortcuts
------------------

============  ======================================================
Shortcut      Purpose
============  ======================================================
Ctrl-N        Create new product
Ctrl-O        Open existing product
Alt-X         Exit application
Ctrl-E        Edit selected artefact
Ctrl-C        Copy artefact to clipboard
Ctrl-V        Paste artefact from clipboard
Del           Delete selected artefact
Ctrl-A        check all items in a list
Shift-Ctrl-A  uncheck all items in a list
Space         Toggles the check state of the selected list item
Ctrl-Space    Toggles the check state of all list items
============  ======================================================


.. _'toolbar buttons`:

Toolbar buttons
---------------

=======================     ======================================================
Button                      Purpose
=======================     ======================================================
|new_product_btn|           Crate new product
|open_product_btn|          Open existing product
|new_feature_btn| 	        Create new features
|new_requirement_btn| 	    Create/attach new requirement
|new_usecase_btn| 	 	    Create/attach new usecase
|new_testcase_btn| 	 	    Create/attach new testcase
|new_testsuite_btn| 	 	Create new testsuite
|new_textsection_btn| 	 	Create new text section
|new_glossaryentry_btn| 	Create new glossary entry
|edit_artefact_btn| 	    Edit selected artefact
|copy_artefact_btn| 	    Copy selected artefact to clipboard
|paste_artefact_btn| 	    Paste artefact from clipboard
|delete_artefact_btn| 	    Delete selected artefact
=======================     ======================================================



.. _'menu items`:

Menu items
----------

=========== =========== =========== =============== =============== ===========
File        Edit        New         Archive         Settings        Help    
=========== =========== =========== =============== =============== ===========
|file_menu| |edit_menu| |new_menu|  |archive_menu|  |settings_menu| |help_menu|    
=========== =========== =========== =============== =============== ===========




.. include:: common.txt
